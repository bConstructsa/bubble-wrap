Author: Geraldine Sarmiento, Nathaniel V. Kelso, Patricio Gonzalez Vivo, Brett Camper, Peter Richardson

import:
    - styles.yaml
    - pois.yaml
    - landuse.yaml
    - places.yaml
    - ui.yaml

labels-global:
    - &text_visible_continent         true
    - &text_visible_admin             true
    - &text_visible_populated_places  true
    - &icon_visible_populated_places  true
    - &text_visible_neighbourhoods    true
    - &text_visible_neighbourhoods_e  true
    - &text_visible_building          true
    - &text_visible_address           true
    - &text_visible_water_labels      true
    - &label_visible_landuse_green    true
    - &icon_visible_landuse_green     true
    - &text_visible_landuse_green     true
    - &label_visible_poi_landuse      true
    - &icon_visible_poi_landuse       true
    - &text_visible_poi_landuse       true
    - &label_visible_poi_landuse_e    true
    - &icon_visible_poi_landuse_e     true
    - &text_visible_poi_landuse_e     true
    - &label_visible_station          true
    - &icon_visible_station           true
    - &text_visible_station           true
    - &text_visible_highway           true
    - &text_visible_highway_e         true
    - &text_visible_trunk_primary     true
    - &text_visible_trunk_primary_e2  false
    - &text_visible_trunk_primary_e   true
    - &text_visible_secondary         true
    - &text_visible_secondary_e       true
    - &text_visible_tertiary          true
    - &text_visible_tertiary_e        true
    - &text_visible_minor_road        true
    - &text_visible_minor_road_e      true
    - &text_visible_service_road      true
    - &text_visible_path              true
    - &text_visible_piste             true
    - &text_visible_steps             true
    - &text_visible_aerialway         true
    - &text_visible_shields           true
    - &text_visible_exits             true

settings:
    cameras:
        - &camera_settings            { type: isometric, axis: [0, 1] }

    lights:
        - &light_settings             { type: directional, direction: [1, 1, -.9], diffuse: 0.5, ambient: 0.85 }

    roads:
        - &highway1                   [0.988,0.495,0.439]
        - &highway1_e                 [0.988,0.495,0.439]
        - &highway_link1              [1.000,0.631,0.590]
        - &highway_casing1            [0.859,0.859,0.859]
        - &highway_tunnel1            [0.800,0.800,0.800]
        - &highway_tunnel_casing1     [0.870,0.870,0.870]
        - &highway_link_tunnel_casing1 [0.8, 0.8, 0.7]
        - &ferry1                     '#8bb5e4'
        - &rail1                      '#999'
        - &rail1_e                    '#bbb'
        - &rail2                      '#777'             # less important rail (service, sidings)
        - &major_road1                [1, 1, 1]
        - &major_road1b               [1.0,1.0,1.0]
        - &major_road1c               white    #15%
        - &major_road2                [1.0,1.0,1.0]
        - &major_road2a               [1.0,1.0,1.0]
        - &major_road2b               [1.0,1.0,1.0]
        - &major_road3                [1.0,1.0,1.0]
        - &major_road4                white
        - &major_road5                white
        - &major_casing1              [0.859,0.859,0.859] # same as highway_casing1
        - &major_casing2              [0.859,0.859,0.859] # zoomed out
        - &major_tunnel1              [.870,0.870,0.870]  # light orange (major_route1)
        - &major_tunnel_casing1       [0.780,0.780,0.780]
        - &major_route1               [1.000,0.631,0.590]
        - &major_route2               [1.000,0.752,0.730] # zoomed out
        - &minor_route                [1.000,0.631,0.590] # same as major_route
        - &minor_road1                [0.9,0.9,0.9]       # natural earth
        - &minor_road2                [0.9,0.9,0.9]       # natural earth, same as major_road2
        - &minor_road3                [0.9,0.9,0.9]
        - &minor_road4                [0.9,0.9,0.9]       # zoomed out
        - &minor_road5                [0.9,0.9,0.9]       # zoomed out, again
        - &minor_casing1              white               # same as highway_casing1
        - &minor_casing2              white               # zoomed out
        - &minor_tunnel1              [0.8, 0.8, 0.7]
        - &minor_tunnel_casing1       white
        - &service_road1              white
        - &service_road2              white
        - &service_road_casing1       [0.770,0.770,0.770]
        - &service_road_casing2       white
        - &path1                      [0.91,0.91,0.91]
        - &path2                      [0.91,0.91,0.91]    # zoomed out
        - &path_casing1               [0.875,0.875,0.875]
        - &path_bridge_casing1        [0.870,0.870,0.870]
        - &path_bridge_casing2        [0.870,0.870,0.870] # zoomed out
        - &path_steps1                [0.91,0.91,0.91]
        - &path_steps1_b              '#f0ebeb'
        - &piste_easy                 [0.367,0.750,0.622]
        - &piste_intermediate         [0.420,0.678,0.863]
        - &piste_advanced             [0.450,0.450,0.450]
        - &piste_expert               [0.450,0.450,0.450]

    boundaries:
        - &country_boundary           [1.0,1.0,1.0]
        - &region_boundary            [1.0,1.0,1.0]
        - &subregion_boundary         '#bbb'
        - &city_wall                  [0.682,0.682,0.682]
        - &retaining_wall             [0.827,0.808,0.780]
        - &snow_fence                 [0.827,0.808,0.780]
        - &fence                      [0.827,0.808,0.780]

    # TODO: replace with global properties
    areas:
        - &scene1      '#eee'                   # map background, water
        - &water1      [0.83, 0.83, 0.83]       # water
        - &green1_r    [0.140,0.843,0.824]      # roads in parks
        - &brown1_bo   [.8, .8, .8]             # university building outlines
        - &grey8       '#ecebe9'                # winter sports
        - &grey9_o     [.5, .5, .5]             # transit platform outline
        - &grey9_v     true                     # transit platform
        - &purple_b    '#c2c3c4'                # airport buildings
        - &purple_bo   '#969798'                # airport buildings outline
        - &building2   [.860, .860, .860]       # building stroke

    labels:
        - &text_fill          black
        - &text_fill2        '#555'             # WHITE
        - &text_fill_road_e   '#555'            # WHITE
        - &text_fill_exits    [0.920,0.398,0.340]         # motorway junctions, highway_casing1
        - &text_fill_building '#ccc'            # WHITE
        - &text_fill_address  '#aaa'            # HUH
        - &text_fill_water   '#4c89b5'          # blue
        - &text_fill_park    [0.35,0.35,0.35]   # black
        - &text_fill_beach    [0.35,0.35,0.35]  # black
        - &text_fill_piste    '#444'             # dark gray
        - &text_fill_piste_e  '#666'             # dark gray early
        - &text_fill_shield   white              # road shield fill color
        - &text_stroke [0.870,0.870,0.870]      # land color
        - &text_stroke_water [0.9, 0.9, 0.9]    # water stroke color
        - &text_stroke_park  '#bddec5'          # park stroke color
        - &text_stroke_building  [0.83, 0.83, 0.83] # building stroke color
        - &text_stroke_address   [0.85, 0.85, 0.85]    # address stroke color
        - &text_stroke_road1  [0.9, 0.9, 0.9]   # road stroke color highway
        - &text_stroke_road2  [0.9, 0.9, 0.9]   # road stroke color major road
        - &text_stroke_road3  [0.9, 0.9, 0.9]   # road stroke color major road route
        - &text_stroke_road4  [0.9, 0.9, 0.9]   # road stroke color minor road
        - &text_stroke_shield  '#D16768'        # road shield stroke color &highway_casing1
        - &townspot_sprite   townspot-m-rev     # depends on land color and text settings
        - &text_font_family  'Open Sans'        # branding in asperational Unicode, yo (or Helvetica)

sources:
    osm:
        # EraserMaps the app only supports MVT format tiles
        type:  MVT #TopoJSONTiles topojson
        #url:  http://vector.dev.mapzen.com/osm/all/{z}/{x}/{y}.mvt
        #enforce_winding: true  #because Tangram v0.4 and tiles v0.5-pre don't play nice
        #url:  //localhost:8080/osm/all/{z}/{x}/{y}.mvt
        url:  https://vector.mapzen.com/osm/all/{z}/{x}/{y}.mvt?api_key=vector-tiles-HqUVidw
        max_zoom: 16


    # Only enable this for local debug, should not be enabled for prod (app inserts these at runtime)
    # These are all in San Francisco, California

    # Current location gem
    # find_me:
    #     type: GeoJSON
    #     url: https://gist.githubusercontent.com/anonymous/9e9588228b0a604264a2/raw/b28be49bea0b7feb859eb65b588c28e9fee5ae2c/map.geojson
    # # Route line
    # route:
    #     type: GeoJSON
    #     # sf to ny
    #     url: https://gist.githubusercontent.com/anonymous/30c6c1a75c168d91d90c/raw/92bfe55e622766d250b1f2f5d17bdc7c26acb956/map.geojson
    #     # local sf trip
    #     # url: https://gist.githubusercontent.com/anonymous/9a610ebda6fe4be7bccc/raw/8d217e43f2412d48d01534ba115f1e42dac72e68/map.geojson
    # # Pin at start of route
    # route_start:
    #     type: GeoJSON
    #     url: https://gist.githubusercontent.com/anonymous/5262969cb7549ea69221/raw/be03f233fa323d9b5cf50ef1d8e89a1faa3750f1/map.geojson
    # # Pin at end of route
    # route_stop:
    #     type: GeoJSON
    #     url: https://gist.githubusercontent.com/anonymous/dbae9635dfe46796490e/raw/df55c318635a7d91b309ed40754d4738a292fd38/map.geojson
    # # Arrow for current route location
    # route_icon:
    #     type: GeoJSON
    #     url: https://gist.githubusercontent.com/anonymous/36613092be6e2aa004fd/raw/f753d13069425199e1dea1b449ef67d723f6510e/map.geojson
    # # Pins showing search result locations
    # search:
    #     type: GeoJSON
    #     url: https://gist.githubusercontent.com/anonymous/57dc09eeb120919f76de/raw/43426217da3c2bae0522dc4257aaa61e4df3981e/map.geojson

cameras:
    isometric:
        type: isometric


scene:
    background:
        color: *scene1

layers:
    # Basemap styling
    earth:
        data: { source: osm, layer: earth }
        draw:
            polygons:
                order: function() { return feature.sort_key; }
                color: [0.870,0.870,0.870]

    water:
        data: { source: osm, layer: water }
        draw:
            grid:
                order: function() { return feature.sort_key; }
                #color: *water1
        ocean:
            filter:
                kind: ocean
            draw:
                grid:
                    color: *water1
        inland-water:
            filter:
                all:
                    - kind: [lake, water, riverbank, reservoir, swimming_pool]
                any:
                    # limit show smaller landuse areas to higher zooms
                    - { $zoom: { min: 1 },  area: { min: 40000000000 } }
                    - { $zoom: { min: 2 },  area: { min: 20000000000 } }
                    # some weird natural earth scale set transition
                    - { $zoom: { min: 3 },  area: { min: 80000000000 } }
                    - { $zoom: { min: 4 },  area: { min: 5000000000 } }
                    - { $zoom: { min: 5 },  area: { min: 700000000 } }
                    - { $zoom: { min: 6 },  area: { min: 500000000 } }
                    - { $zoom: { min: 7 },  area: { min: 160000000 } }
                    - { $zoom: { min: 8 },  area: { min: 40000000 } }
                    - { $zoom: { min: 9 },  area: { min: 10000000 } }
                    - { $zoom: { min: 10 }, area: { min: 8000000 } }
                    - { $zoom: { min: 11 }, area: { min: 2000000 } }
                    - { $zoom: { min: 12 }, area: { min: 200000 } }
                    - { $zoom: { min: 13 }, area: { min: 100000 } }
                    - { $zoom: { min: 14 }, area: { min: 2000 } }
                    - { $zoom: { min: 15 } }
            draw:
                grid:
                    color: *water1
        other-water-areas:
            filter: { not: { kind: [ocean, lake, water, reservoir, playa, swimming_pool] }, $zoom: { min: 11 }, area: { min: 100 } }
            draw:
                grid:
                    color: *water1
        playas:
            filter: { kind: playa, $zoom: {min: 6} }
            draw:
                polygons:
                    order: function() { return feature.sort_key; }
                    color: [0.870,0.870,0.870]
        water-boundary-ocean-early:
            filter: { boundary: yes, kind: ocean, $zoom: {min: 1, max: 17} }
            draw:
                line2:
                    style: lines
                    order: function() { return feature.sort_key; }
                    color: [[9,[0.396,0.833,0.920]],[10,[0.886,0.937,0.988]]]
                    width: [[9,0.25px],[10,2px],[11,3px],[13,4px],[15,6px]]
                lines:
                    order: 240
                    color: [[1,[0.698,0.800,0.820]],[11,[0.631,0.773,0.800]],[14,[0.543,0.740,0.780]]]
                    width: [[1,0.25px],[6,0.5px],[7,0.75px],[9,0.75px],[10,1px]]
        water-boundary-ocean-late:
            filter: { boundary: yes, kind: ocean, $zoom: {min: 17} }
            draw:
                water_border:
                    order: 240
                    color: [[0,[0.886,0.937,0.988]]]
                    width: 20px
        water_boundaries-not-ocean:
            filter: { boundary: yes, not: { kind: ocean }, $zoom: { min: 8 } }
            draw:
                lines:
                    order: function() { return feature.sort_key; }
                    # color: [[8,[0.635,0.737,0.753]],[13,[0.635,0.737,0.753]],[14,[0.569,0.722,0.749]],[15,[0.397,0.743,0.809]]]
                    color: [[8,[0.749,0.831,0.867]],[12,[0.698,0.788,0.816]],[13,[0.698,0.784,0.812]],[14,[0.627,0.788,0.831]],[17,[0.643,0.824,0.851]]]
                    width: [[8,0.5px],[10,0.5px],[11,0.5px],[12,0.75px],[13,1px],[14,1px],[15,1px],[16,1px],[17,1px]]
                    join: round
                    outline:
                        color: [0.886,0.937,0.988]
                        #width: [[9,0px],[10,1.5px],[11,1px],[12,1.5px],[13,1.6px],[14,2px],[15,2px],[16,3px],[18,4px]]
                        width: [[11,0px],[12,1.2px],[13,1.6px],[14,2px],[15,2px],[16,3px],[18,4px]]
            early:
                filter: { $zoom: { min: 14 } }
                draw:
                    lines:
                        order: 241
            riverbank:
                # river boundaries like the thames in london, la seine in paris
                filter: { kind: riverbank }
                draw:
                    lines:
                        color: [[8,[0.667,0.792,0.824]],[11,[0.698,0.808,0.835]],[13,[0.710,0.796,0.824]],[14,[0.522,0.792,0.855]]]
                        width: [[9,0.5px],[10,0.75px],[11,0.75px],[12,0.8px],[13,1px],[14,1px],[15,1px],[16,1px],[17,1.5px]]
        river:
            #river center lines, not boundaries for polygons
            filter: { kind: [river,canal,stream,dam,ditch,drain], $zoom: { min: 11 }, not: { is_tunnel: true } }
            draw:
                lines:
                    order: function() { return feature.sort_key; }
                    color: [[11,[0.753,0.820,0.835]],[12,[0.710,0.800,0.824]],[13,[0.886,0.937,0.988]]]
                    width: [[8,0px],[10,0px],[11,0.75px],[12,1px],[13,1px],[14,2px],[15,3px],[16,4px],[17,5px]]
                    join: round
                    outline:
                        color: [[11,[0.671,0.788,0.812]],[13,[0.710,0.800,0.824]],[14,[0.635,0.812,0.843]]]
                        width: [[9,0px],[11,0px],[12,0px],[13,0.5px],[14,0.75px],[15,0.75px],[16,0.75px],[17,1px]]

    subway-light-rail:
        data: { source: osm, layer: transit }
        filter: { not: { kind: [platform] }, $zoom: { min: 14 } }
        draw:
            lines:
                interactive: true
                order: function() { return feature.sort_key || 275; }
        railway:
            filter: { kind: [railway,train] }
            draw:
                lines:
                    color: [0.588,0.671,0.698]
                    width: [[14,0.4px],[15,0.75px],[16,1.1px],[18,2px],[19,1m]]
        subway:
            filter: { kind: subway }
            draw:
                lines:
                    color: [0.588,0.671,0.698]
                    width: [[14,0.4px],[15,0.75px],[16,1.3px],[17,1.5px],[18,2m]]
        light_rail:
            filter: { kind: [light_rail,tram], $zoom: { min: 15 } }
            draw:
                lines:
                    order: 415
                    color: [0.588,0.671,0.698]
                    width: [[14,0px],[15,0.6px],[16,0.75px],[17,1.5px],[19,1m]]

    railway-late:
        data: { source: osm, layer: roads }
        filter: { kind: rail, not: { railway: [subway,light_rail,tram] } }
        draw:
            lines:
                interactive: true
                order: function() { return feature.sort_key; }
                color: [0.588,0.671,0.698]
                width: [[12,0px],[13,0.25px],[14,0.4px],[15,0.75px],[16,0.75px],[18,1m]]
        service:
            filter: { service: true }
            draw:
                lines:
                    color: [0.588,0.671,0.698]
                    width: [[14,0px],[15,0.3px],[16,0.5px],[18,0.75px],[19,0.5m]]
        z-order:
            #filter: { $zoom: {min: 12} }
            draw:
                lines:
                    # let roads sort themselves past zoom 14
                    order: function() { return feature.sort_key; }
                    # but give them all the same outline
                    outline:
                        order: 354

            bridges-tunnels:
                filter: { any: [is_bridge: yes, is_tunnel: yes] }
                draw:
                    lines:
                        outline:
                            # except bridges and tunnels, their outlines should also self-sort
                            order: function() { return feature.sort_key || 305; }

    platforms:
        data: { source: osm, layer: transit }
        filter: { kind: platform }
        draw:
            lines_transparent:
                color: [0.569,0.690,0.722,0.5]
                width: 5m
                visible: *grey9_v
        polygon_geom:
            filter: { $geometry: polygon }
            draw:
                polygons_transparent:
                    color: [0.592,0.671,0.694,0.5]
                    visible: *grey9_v
                lines_transparent:
                    visible: false
                outline_transparent:
                    color: *grey9_o
                    width: [[16,0px],[17,0.5px],[19,2px]]
        z-order:
            draw:
                lines_transparent:
                    order: function() { if($zoom<17) { return feature.sort_key; } else { return 435; } }
                polygons_transparent:
                    order: function() { if($zoom<17) { return feature.sort_key; } else { return 435; } }
                outline_transparent:
                    order: function() { if($zoom<17) { return feature.sort_key; } else { return 436; } }

    roads:
        data: { source: osm, layer: roads }
        filter: { not: { kind: rail } }
        draw:
            lines:
                interactive: true
                # let roads sort themselves past zoom 14 (using server value)
                order: function() { return feature.sort_key; }
                # but give them all the same outline
                outline:
                    order: 352
            text-blend-order:
                visible: false    # labels are enabled by each layer below
                font:
                    family: *text_font_family
                    weight: 400
                    fill: *text_fill

        natural_earth_highways:
            filter: { source: 'naturalearthdata.com' }
            draw:
                lines:
                    # Perf impact (too many vertices)
                    #cap: round
                    #join: round
                    color: *highway1
                    width: [[5, 1px], [7, 1.4px], [9, 1.5px], [14, 3px], [16, 4px], [17, 10m]]
            major_road:
                filter: { type: ['Secondary Highway','Road'] }
                draw:
                    lines:
                        color: [0.980,0.601,0.559]
                        width: [[5, 0.45px], [6, 0.75px], [7, 1.0px], [8, 1px]]
            minor_road:
                filter: { type: 'Unknown' }
                draw:
                    lines:
                        color: [[12, *minor_road1], [17, *minor_road2]]
                        width: [[12, 1.0px], [14, 1.5px], [15, 3px], [16, 5m]]
            ferry:
                filter: { kind: Ferry }
                draw:
                    lines:
                        color: [0.702,0.843,0.933]
                        width: 1px
        highway:
            filter: { kind: highway }
            draw:
                lines:
                    color: [[8, *highway1], [14, *highway1], [15, [1.0,1.0,1.0]], [17, [1.0,1.0,1.0]]]
                    width: [[8, 1px], [9, 1.25px], [11, 1.2px], [12, 1.3px], [13, 1.5px], [14, 2.25px], [15, 0.15px], [16, 5.5px], [17, 12m]]
                    outline:
                        color: [[11, *highway_casing1], [15,[0.988,0.495,0.439]], [17, [0.988,0.495,0.439]]]
                        width: [[11, 0], [12, 1px], [13, 1.33px], [15, 2px], [16, 2.25px], [17, 3px], [18, 3px]]
            early:
                filter: { $zoom: { max: 15 } }
                draw:
                    lines:
                        outline:
                            order: 353
            link:
                filter: { is_link: yes } # on- and off-ramps, etc
                draw:
                    lines:
                        color: [[9, *highway_link1], [14, *highway_link1], [15, [1.0,1.0,1.0]], [17, [1.0,1.0,1.0]]]
                        width: [[9, 0px], [11, 0.5px], [13, 1px], [14, 1px], [15, 0.15px], [16, 3px], [17, 4m], [18, 5m]]
                        cap: butt
                        outline:
#                            order: 355
                            color: [[10, *highway_casing1], [16, [0.988,0.495,0.439]], [17, [0.988,0.495,0.439]]]
                            width: [[14, 0px], [15, 0.85px], [17, 1.125px], [18, 1.5px]]
                early:
                    filter: { $zoom: { max: 15 } }
                    draw:
                        lines:
                            order: 352
                tunnel-link:
                    filter: {is_tunnel: yes, $zoom: {min: 13} }
                    draw:
                        lines:
                            color: *highway_tunnel1
                            outline:
                                color: *highway_tunnel_casing1
            tunnel:
                filter: {is_tunnel: yes, $zoom: {min: 13} }
                draw:
                    lines:
                        # color: [[16, [0.843,0.843,0.843]]]
                        color: [[16, [0.85,0.85,0.85]]]
                        outline:
                            color: [[13, [0.890,0.890,0.890]], [14, [0.870,0.870,0.870]], [16, [0.824,0.753,0.741]]]
            highway_bridge:
                filter: {is_bridge: yes}
                draw:
                    lines:
                        cap: round
                        outline:
                            cap: butt
            labels-highway-early:
                filter: { $zoom: [7,8,9] }
                draw:
                    text-blend-order:
                        priority: 50
                        visible: *text_visible_shields
                        text_source: ref
                        font:
                            fill: [1.0,1.0,1.0]
                            weight: 600
                            size: 9px
                            stroke: { color: [0.976,0.541,0.490], width: 3 }
            labels-highway-z10:
                filter:
                    $zoom: 10
                draw:
                    text-blend-order:
                        visible: *text_visible_shields
                        text_source: ref
                        font:
                            fill: [1.0,1.0,1.0]
                            weight: 600
                            size: 10px
                            stroke: { color: [0.976,0.541,0.490], width: 3 }
            labels-highway-z11:
                filter:
                    $zoom: 11
                draw:
                    text-blend-order:
                        visible: *text_visible_shields
                        text_source: ref
                        font:
                            fill: [1.0,1.0,1.0]
                            weight: 600
                            size: 11px
                            stroke: { color: [0.976,0.541,0.490], width: 3 }
            labels-highway-z12:
                filter:
                    $zoom: 12
                draw:
                    text-blend-order:
                        visible: *text_visible_shields
                        text_source: ref
                        font:
                            fill: [1.0,1.0,1.0]
                            weight: 600
                            size: 12px
                            stroke: { color: [0.976,0.541,0.490], width: 3 }
            labels-highway-z13:
                filter:
                    $zoom: 13
                draw:
                    text-blend-order:
                        priority: 50
                        visible: *text_visible_highway
                        #text_source: ref
                        text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                        font:
                            fill: [0.0,0.0,0.0]
                            weight: 600
                            size: 12px
                            # stroke: { color: [0.976,0.541,0.490], width: 4 }
            labels-highway-z14:
                filter:
                    $zoom: 14
                draw:
                    text-blend-order:
                        priority: 50
                        visible: *text_visible_highway
                        #text_source: ref
                        text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                        font:
                            fill: [0.0,0.0,0.0]
                            weight: 600
                            size: 13px
                            # stroke: { color: [0.976,0.541,0.490], width: 4 }
            labels-highway-z15:
                filter:
                    $zoom: 15
                draw:
                    text-blend-order:
                        visible: *text_visible_highway
                        font:
                            fill: [0.0,0.0,0.0]
                            weight: 600
                            size: 15px
                            stroke: { color: [1.000,1.000,1.000], width: 2 }
            labels-highway-z16:
                filter: { $zoom: { min: 16, max: 18 } }
                draw:
                    text-blend-order:
                        priority: 50
                        visible: *text_visible_highway
                        font:
                            fill: [0.0,0.0,0.0]
                            size: 16px
                            stroke: { color: [1.000,1.000,1.000], width: 4 }
            labels-highway-z18:
                filter: { $zoom: { min: 18 } }
                draw:
                    text-blend-order:
                        priority: 50
                        visible: *text_visible_highway
                        font:
                            fill: [0.0,0.0,0.0]
                            size: 17px
                            stroke: { color: [1.000,1.000,1.000], width: 4 }

        major_road:
            filter: { kind: major_road }
            # default style
            draw:
                lines:
                    color: [[8, *major_road4], [13, *major_road2], [17, *major_road1]]
                    width: [[13, 0px], [14, 2px], [16, 2.5px], [19, 8m]]
            trunk_primary:
                filter: { highway: [trunk, primary] }
                draw:
                    lines:
                        color: [1.0,1.0,1.0]
                        width: [[9, 0.5px], [10, 0.5px], [11, 1.0px], [12, 1.0px], [13, 1.5px], [14, 2.5px], [15, 5px], [16, 10m], [17, 10m]]
                        outline:
                            color: [[13, [0.827,0.827,0.827]], [15, [1.000,0.739,0.710]]]
                            # todo: investigate width optimizations
                            width: [[14, 0px], [15, 1.75px], [16, 2px], [17, 3px]]
                early:
                    filter: { $zoom: { max: 16 } }
                    draw:
                        lines:
                            order: 352
                            outline:
                                order: function() { return feature.sort_key + 2; }
                    primary:
                        filter: { kind: [primary] }
                        draw:
                            lines:
                                outline:
                                    order: function() { return feature.sort_key + 1; }
                routes:
                    filter: { ref: true }
                    draw:
                        lines:
                            color: [[9,*major_route1], [14,*major_route1], [15,[1.0,1.0,1.0]], [16,[1.0,1.0,1.0]]]
                            #order: function() { return feature.sort_key + 1; }
                            # todo confirm widths
                            width: [[9, 1.0px], [10, 1.0px], [11, 1.2px], [12, 1.25px], [13, 1.5px], [14, 1.6px], [15, 0.15px], [16, 5.25px], [17, 12m]]
                            outline:
                                color: [[13, [0.870,0.870,0.870]], [15, [0.976,0.612,0.573]]]
                                width: [[13, 0], [15, 2px], [16, 2px], [17, 3px]]
                    early:
                        filter: { $zoom: { max: 16 } }
                        draw:
                            lines:
                                order: function() { return feature.sort_key + 2; }
                                outline:
                                    order: 353
                    # no national-routes layer because it's not different than the basic style
                    tunnel:
                        filter: {is_tunnel: yes, $zoom: {min: 13} }
                        draw:
                            lines:
                                color: *major_tunnel1
                                outline:
                                    color: *major_tunnel_casing1
                                    width: [[13, 0.5px], [15, 2px], [16, 2px], [17, 3px]]
                    labels-trunk_primary-route-z14:
                        filter: { $zoom: [14] }
                        draw:
                            text-blend-order:
                                priority: 53
                                visible: *text_visible_trunk_primary_e2
                                text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                                font:
                                    fill: [0.0,0.0,0.0]
                                    size: 13px
                                    stroke: { color: [0.95,0.95,0.95], width: 0.1px }
                    labels-trunk_primary-route-z15:
                        filter: { $zoom: [15] }
                        draw:
                            text-blend-order:
                                priority: 53
                                visible: *text_visible_trunk_primary
                                text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                                font:
                                    fill: [0.0,0.0,0.0]
                                    weight: 600
                                    size: 15px
                                    stroke: { color: [0.95,0.95,0.95], width: 0.1px }
                    labels-trunk_primary-route-z16:
                        filter: { $zoom: { min: 16 } }
                        draw:
                            text-blend-order:
                                priority: 53
                                visible: *text_visible_trunk_primary
                                text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                                font:
                                    fill: [0.0,0.0,0.0]
                                    weight: 600
                                    size: 16px
                                    stroke: { color: [1.000,1.000,1.000], width: 4px }
                labels-trunk_primary-z11:
                    filter:
                        $zoom: [11]
                    draw:
                        text-blend-order:
                            priority: 53
                            visible: *text_visible_trunk_primary_e
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.4,0.4,0.4]
                                size: 10px
                                # stroke: { color: [1.000,0.631,0.590], width: 3 }
                labels-trunk_primary-z12:
                    filter:
                        $zoom: [12]
                    draw:
                        text-blend-order:
                            priority: 53
                            visible: *text_visible_trunk_primary_e
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.4,0.4,0.4]
                                size: 11px
                                # stroke: { color: [1.000,0.631,0.590], width: 3 }
                labels-trunk_primary-z13:
                    filter:
                        $zoom: [13]
                    draw:
                        text-blend-order:
                            priority: 53
                            visible: *text_visible_trunk_primary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.25,0.25,0.25]
                                size: 12px
                                stroke: { color: *text_stroke, width: 2 }
                labels-trunk_primary-z14:
                    filter:
                        $zoom: [14]
                    draw:
                        text-blend-order:
                            priority: 53
                            visible: *text_visible_trunk_primary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.10,0.10,0.10]
                                size: 13px
                                stroke: { color: [1.00,1.00,1.00], width: 2 }
                labels-trunk_primary-z15:
                    filter: { $zoom: [15] }
                    draw:
                        text-blend-order:
                            priority: 53
                            visible: *text_visible_trunk_primary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.0,0.0,0.0]
                                size: 14px
                                stroke: { color: [1.00,1.00,1.00], width: 3 }
                labels-trunk_primary-z16:
                    filter: { $zoom: [16] }
                    draw:
                        text-blend-order:
                            priority: 53
                            visible: *text_visible_trunk_primary
                            text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                            font:
                                fill: [0.0,0.0,0.0]
                                size: 15px
                                stroke: { color: [1.00,1.00,1.00], width: 3 }
                labels-trunk_primary-z17:
                    filter: { $zoom: [17] }
                    draw:
                        text-blend-order:
                            priority: 53
                            visible: *text_visible_trunk_primary
                            text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                            font:
                                fill: [0.0,0.0,0.0]
                                size: 16px
                                stroke: { color: [1.00,1.00,1.00], width: 3 }
                labels-trunk_primary-z18:
                    filter: { $zoom: { min: 18 } }
                    draw:
                        text-blend-order:
                            priority: 53
                            visible: *text_visible_trunk_primary
                            text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                            font:
                                fill: [0.0,0.0,0.0]
                                size: 17px
                                stroke: { color: [1.00,1.00,1.00], width: 3 }
            link:
                filter: { is_link: yes } # on- and off-ramps, etc
                draw:
                    lines:
                        width: [[9, 0px], [10, 0.5px], [14, 2px], [16, 4m], [17, 5m], [18, 6m]]
                        outline:
                            color: [[10, [0.827,0.827,0.827]], [13, [0.827,0.827,0.827]], [15, [1.000,0.739,0.710]]]
                            width: [[10, 0], [11, 1px], [14, 1px], [16, 1.5px], [17, 2px]]
            tunnel:
                filter: {is_tunnel: yes, $zoom: {min: 13} }
                draw:
                    lines:
                        color: *major_tunnel1
                        outline:
                            color: *major_tunnel_casing1
            secondary:
                filter: { highway: secondary }
                draw:
                    lines:
                        color: [1.0,1.0,1.0]
                        width: [[11, 0.65px], [12, 0.75px], [13, 1.25px], [14, 2px], [15, 5px], [16, 10m], [17, 10m]]
                        outline:
                            color: [[15, [1.000,0.739,0.710]]]
                            width: [[14, 0], [15, 1.75px], [16, 2px], [17, 3px]]
                early:
                    filter: { $zoom: { max: 15 } }
                    draw:
                        lines:
                            order: 352
                            visible: false
                            outline:
                                order: 353 #function() { return feature.sort_key + 2; }
                                visible: false
                routes:
                    filter: { ref: true, $zoom: { min: 12} }
                    draw:
                        lines:
                            #order: function() { return feature.sort_key + 2; }
                            color: [1.0,1.0,1.0]
                            width: [[11, 0.65px], [12, 0.75px], [13, 1.25px], [14, 2px], [15, 5px], [16, 12m], [17, 12m]]
                            outline:
                                color: [0.827,0.827,0.827]
                                width: [[14, 0px], [15,  1.75px], [16, 2px], [17, 3px]]
                    early:
                        filter: { $zoom: { max: 15 } }
                        draw:
                            lines:
                                order: function() { return feature.sort_key + 2; }
                                outline:
                                    order: 353
                    tunnel:
                        filter: {is_tunnel: yes, $zoom: {min: 13} }
                        draw:
                            lines:
                                color: *major_tunnel1
                                outline:
                                    color: *major_tunnel_casing1
                    labels-secondary-routes:
                        filter: { $zoom: [13] }
                        draw:
                            text-blend-order:
                                priority: 54
                                visible: *text_visible_secondary_e
                                text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                                font:
                                    # need fill here?
                                    size: 12px
                                    stroke: { color: *text_stroke, width: 4 }
                    labels-secondary-routes-z15:
                        filter: { $zoom: { min: 15 } }
                        draw:
                            text-blend-order:
                                priority: 54
                                visible: *text_visible_secondary_e
                                text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                                font:
                                    # need fill here?
                                    weight: 600
                                    size: 14px
                                    stroke: { color: *text_stroke, width: 4 }
                in_park:
                    filter: { landuse_kind: [park,nature_reserve,conservation,golf_course,garden] }
                    draw:
                        lines:
                            color: [1.0,1.0,1.0]
                            outline:
                                color: [[14, [0.800,0.851,0.847]], [15, [0.678,0.796,0.792]]]
                                width: [[12, 0px], [13, 0.5px], [14, 1.0px], [15, 1.0px], [16, 1.5px], [18, 3.0px]]
                    golf_course:
                        filter: { landuse_kind: golf_course }
                        draw:
                            lines:
                                outline:
                                    color: [0.757,0.839,0.788]
                    nature_reserve:
                        filter: { landuse_kind: nature_reserve }
                        draw:
                            lines:
                                outline:
                                    color: [0.635,0.819,0.742]
                    conservation:
                        filter: { landuse_kind: conservation }
                        draw:
                            lines:
                                outline:
                                    color: orange
                    zoo:
                        filter: { landuse_kind: zoo }
                        draw:
                            lines:
                                outline:
                                    color: pink
                labels-secondary-z13:
                    filter:
                        $zoom: [13]
                    draw:
                        text-blend-order:
                            priority: 54
                            visible: *text_visible_secondary_e
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.5,0.5,0.5]
                                size: 11px
                                stroke: { color: *text_stroke, width: 2 }
                labels-secondary-z14:
                    filter:
                        $zoom: [14]
                    draw:
                        text-blend-order:
                            priority: 54
                            visible: *text_visible_secondary_e
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.30,0.30,0.30]
                                size: 12px
                                stroke: { color: [1.00,1.00,1.00], width: 2 }
                labels-secondary-z15:
                    filter:
                        $zoom: [15]
                    draw:
                        text-blend-order:
                            priority: 54
                            visible: *text_visible_secondary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.10,0.10,0.10]
                                size: 13px
                                stroke: { color: [1.00,1.00,1.00], width: 2 }
                labels-secondary-z16:
                    filter: { $zoom: { min: 16, max: 18 } }
                    draw:
                        text-blend-order:
                            priority: 54
                            visible: *text_visible_secondary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.0,0.0,0.0]
                                size: 14.5px
                                stroke: { color: [1.00,1.00,1.00], width: 3 }
                labels-secondary-z18:
                    filter: { $zoom: { min: 18 } }
                    draw:
                        text-blend-order:
                            priority: 54
                            visible: *text_visible_secondary
                            #text_source: ref
                            text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                            font:
                                # need a fill color here?
                                fill: [0.15,0.15,0.15]
                                size: 16px
                                stroke: { color: [1.00,1.00,1.00], width: 3 }
            tertiary:
                filter: { highway: [tertiary, tertiary_link] }
                draw:
                    lines:
                        color: [1.0,1.0,1.0]
                        width: [[11, 0.5px], [12, 0.5px], [13, 0.65px], [14, 1.0px], [15, 2px], [16, 8m], [19, 10m]]
                        outline:
                            color: [0.827,0.827,0.827]
                            # todo: look at zoom 13 width
                            width: [[15, 0], [16, 1.0px], [18, 3.5px]]
                early:
                    filter: { $zoom: { max: 15 } }
                    draw:
                        lines:
                            order: 352
                            outline:
                                order: function() { return feature.sort_key + 3; }
                routes:
                    filter: { ref: true, $zoom: { min: 12} }
                    draw:
                        lines:
                            color: [1.0,1.0,1.0]
                            width: [[11, 0.5px], [12, 0.5px], [13, 0.65px], [14, 1.0px], [15, 2px], [16, 8m], [19, 10m]]
                            outline:
                                color: [0.827,0.827,0.827]
                                width: [[15, 0], [16, 1.0px], [18, 3.5px]]
                    early:
                        filter: { $zoom: { max: 15 } }
                        draw:
                            lines:
                                order: function() { return feature.sort_key + 3; }
                                outline:
                                    order: 353
                    tunnel:
                        filter: {is_tunnel: yes, $zoom: {min: 13} }
                        draw:
                            lines:
                                color: *major_tunnel1
                                outline:
                                    color: *major_tunnel_casing1
                link:
                    filter: { is_link: yes } # on- and off-ramps, etc
                    draw:
                        lines:
                            color: *major_road1
                            width: [[10, 0.5px], [14, 2px], [16, 4m], [17, 5m], [18, 6m]]
                            outline:
                                color: [[12,*major_casing2]]
                                width: [[12, 0], [14, 1px], [16, 1.5px], [17, 2px]]
                in_park:
                    filter: { landuse_kind: [park,nature_reserve,conservation,golf_course,garden] }
                    draw:
                        lines:
                            #width: [[11, 0.0px], [12, .5px], [14, 1.5px], [16, 2.0px], [19, 7m]]
                            color: [[12, [0.9,0.9,0.9]], [13, [0.9,0.9,0.9]], [14, [0.98,0.98,0.98]]]
                            outline:
                                color: [[14, [0.800,0.851,0.847]], [15, [0.678,0.796,0.792]]]
                                width: [[12, 0px], [13, 0.5px], [14, 1.0px], [15, 1.0px], [16, 1.5px], [18, 3.0px]]
                    golf_course:
                        filter: { landuse_kind: golf_course }
                        draw:
                            lines:
                                outline:
                                    color: [0.698,0.835,0.765]
                    nature_reserve:
                        filter: { landuse_kind: nature_reserve }
                        draw:
                            lines:
                                outline:
                                    color: [0.635,0.819,0.742]
                    conservation:
                        filter: { landuse_kind: conservation }
                        draw:
                            lines:
                                outline:
                                    color: orange
                    zoo:
                        filter: { landuse_kind: zoo }
                        draw:
                            lines:
                                outline:
                                    color: pink
                labels-tertiary-z13:
                    filter: { $zoom: [13] }
                    draw:
                        text-blend-order:
                            priority: 55
                            visible: *text_visible_tertiary_e
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.5,0.5,0.5]
                                size: 10px
                                stroke: { color: [1.00,1.00,1.00], width: 1 }
                labels-tertiary-z14:
                    filter: { $zoom: [14] }
                    draw:
                        text-blend-order:
                            priority: 55
                            visible: *text_visible_tertiary_e
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.5,0.5,0.5]
                                size: 12px
                                stroke: { color: [1.00,1.00,1.00], width: 1 }
                labels-tertiary-z15:
                    filter: { $zoom: [15] }
                    draw:
                        text-blend-order:
                            priority: 55
                            visible: *text_visible_tertiary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.3,0.3,0.3]
                                size: 12px
                                stroke: { color: [1.00,1.00,1.00], width: 1 }
                labels-tertiary-z16:
                    filter: { $zoom: [16] }
                    draw:
                        text-blend-order:
                            priority: 55
                            visible: *text_visible_tertiary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.3,0.3,0.3]
                                size: 14px
                                stroke: { color: [1.00,1.00,1.00], width: 2 }
                labels-tertiary-z17:
                    filter: { $zoom: { min: 17, max: 18 } }
                    draw:
                        text-blend-order:
                            priority: 55
                            visible: *text_visible_tertiary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.15,0.15,0.15]
                                size: 15px
                                stroke: { color: [1.00,1.00,1.00], width: 2 }
                labels-tertiary-z18:
                    filter: { $zoom: { min: 18 } }
                    draw:
                        text-blend-order:
                            priority: 55
                            visible: *text_visible_tertiary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.15,0.15,0.15]
                                size: 15px
                                stroke: { color: [1.00,1.00,1.00], width: 2 }
        minor_road:
            filter: { kind: minor_road, not: { highway: service, aeroway: [runway, taxiway] } }
            draw:
                lines:
                    color: [[12, [0.9,0.9,0.9]], [13, [0.9,0.9,0.9]], [14, [1.0,1.0,1.0]]]
                    width: [[12, 0.65px], [13, 0.75px], [14, 0.85px], [15, 2px], [16, 8m], [17, 9m]]
                    # todo look at when color starts (z11 not z12) and width changes
                    #width: [[11, 0.5px], [12, 0.75px], [13, 1.0px], [14, 1.2px], [15, 2.5px], [16, 8m]]
                    outline:
                        color: [0.843,0.843,0.843]
                        width: [[15, 0], [16, 2px], [17, 3px]]
            early:
                filter: { $zoom: { max: 16 } }
                draw:
                    lines:
                        order: 350
                        outline:
                            order: 351
            # Is this junk code?
            round:
                filter: { $zoom: { min: 17 } }
                draw:
                    lines:
                        cap: round
                        join: round

            in_park:
                filter: { landuse_kind: [park,protected_area,nature_reserve,conservation,golf_course,garden,wood,farmland,farm] }
                draw:
                    lines:
                        #todo: is the width here right?
                        #width: [[11, 0.5px], [12, 1.0px], [13, 1.2px], [14, 1.75px], [15, 2.5px], [16, 8m]]
                        color: [[12, [0.9,0.9,0.9]], [13, [0.96,0.96,0.96]], [14, [1.0,1.0,1.0]]]
                        outline:
                            color: [[14, [0.800,0.851,0.847]], [15, [0.678,0.796,0.792]]]
                            #todo: is the width here right?
                            width: [[13, 0px], [14, 0.25px], [17, 2.0px], [18, 4.0px]]
                golf_course:
                    filter: { landuse_kind: golf_course }
                    draw:
                        lines:
                            outline:
                                color: [0.757,0.839,0.788]
                nature_reserve:
                    filter: { landuse_kind: nature_reserve }
                    draw:
                        lines:
                            outline:
                                color: [0.635,0.819,0.742]
                conservation:
                    filter: { landuse_kind: conservation }
                    draw:
                        lines:
                            outline:
                                color: orange
                zoo:
                    filter: { landuse_kind: zoo }
                    draw:
                        lines:
                            outline:
                                color: pink

            # in_residential:
            #     filter: { landuse_kind: residential }
            #     draw:
            #         lines:
            #             outline:
            #                 color: red
            in_university:
                filter: { landuse_kind: university }
                draw:
                    lines:
                        color: [[12, [0.9,0.9,0.9]], [13, [0.96,0.96,0.96]], [14, [1.0,1.0,1.0]]]
                        outline:
                            color: [0.806,0.763,0.717]
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
            in_hospital:
                filter: { landuse_kind: hospital }
                draw:
                    lines:
                        color: [[12, [0.9,0.9,0.9]], [13, [0.96,0.96,0.96]], [14, [1.0,1.0,1.0]]]
                        outline:
                            color: [0.818,0.702,0.713]
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]

            tunnel:
                filter: {is_tunnel: yes, $zoom: {min: 13} }
                draw:
                    lines:
                        color: [0.870,0.870,0.870]
                        outline:
                            color: [0.790,0.790,0.790]
            minor_road_bridge:
                filter: { is_bridge: yes }
                draw:
                    lines:
                        cap: round
                        outline:
                            cap: butt
            labels-minor_road-z15:
                filter: { $zoom: 15 }
                draw:
                    text-blend-order:
                        priority: 56
                        visible: *text_visible_minor_road_e
                        text_source: name
                        font:
                            fill: [0.30,0.30,0.30]
                            size: 12px
                            stroke: { color: [1.00,1.00,1.00], width: 1 }
            labels-minor_road-z16:
                filter: { $zoom: 16 }
                draw:
                    text-blend-order:
                        priority: 56
                        visible: *text_visible_minor_road_e
                        text_source: name
                        font:
                            fill: [0.35,0.35,0.35]
                            size: 14px
                            stroke: { color: [1.00,1.00,1.00], width: 2 }
            labels-minor_road-z17:
                filter: { $zoom: { min: 17, max: 18 } }
                draw:
                    text-blend-order:
                        priority: 56
                        visible: *text_visible_minor_road_e
                        text_source: name
                        font:
                            fill: [0.25,0.25,0.25]
                            size: 14px
                            stroke: { color: [1.00,1.00,1.00], width: 2 }
            labels-minor_road-z18:
                filter: { $zoom: { min: 18 } }
                draw:
                    text-blend-order:
                        priority: 56
                        visible: *text_visible_minor_road
                        text_source: name
                        font:
                            # needs a fill color?
                            fill: [0.15,0.15,0.15]
                            size: 15px
                            stroke: { color: [1.00,1.00,1.00], width: 2 }
        service_road:
            filter: { kind: minor_road, highway: service }
            draw:
                lines:
                    color: [[12, [0.9,0.9,0.9]], [14, [0.9,0.9,0.9]], [15, [1.0,1.0,1.0]]]
                    # todo: consider starting at z13 with 0.5px
                    width: [[12, 0.65px], [13, 0.75px], [14, 0.85px], [15, 1.25px], [16, 2.0px], [18, 6m]]
                    outline:
                        color: [0.827,0.827,0.827]
                        width: [[15, 0px], [16, 0.5px], [17, 1.0px], [18, 1.75px]]
            in_park:
                filter: { landuse_kind: [park,forest,nature_reserve,conservation,golf_course,garden] }
                draw:
                    lines:
                        #todo: is the color necc here?
                        color: [0.976,0.976,0.976]
                        outline:
                            color: [[14, [0.800,0.851,0.847]], [15, [0.678,0.796,0.792]]]
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
                golf_course:
                    filter: { landuse_kind: golf_course }
                    draw:
                        lines:
                            outline:
                                color: [0.698,0.835,0.765]
                nature_reserve:
                    filter: { landuse_kind: nature_reserve }
                    draw:
                        lines:
                            outline:
                                color: [0.635,0.819,0.742]
                conservation:
                    filter: { landuse_kind: conservation }
                    draw:
                        lines:
                            outline:
                                color: orange
                zoo:
                    filter: { landuse_kind: zoo }
                    draw:
                        lines:
                            outline:
                                color: pink
            in_cemetery_garden:
                filter: { landuse_kind: [cemetery,garden] }
                draw:
                    lines:
                        outline:
                            color: [0.737,0.816,0.753]
                            # todo: consider starting z13 with 0.25px
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
            in_university:
                filter: { landuse_kind: university }
                draw:
                    lines:
                        #todo: is this necc here?
                        color: [1.0,1.0,1.0]
                        outline:
                            color: [0.806,0.763,0.717]
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
            in_hospital:
                filter: { landuse_kind: hospital }
                draw:
                    lines:
                        #todo: is this necc here?
                        color: [1.0,1.0,1.0]
                        outline:
                            color: [0.818,0.702,0.713]
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
            labels-service_road:
                filter: { $zoom: 17 }
                draw:
                    text-blend-order:
                        priority: 57
                        visible: *text_visible_service_road
                        text_source: name
                        font:
                            # need fill color?
                            fill: [0.25,0.25,0.25]
                            size: 13px
                            stroke: { color: [1.00,1.00,1.00], width: 2 }
            labels-service_road-z18:
                filter: { $zoom: { min: 18 } }
                draw:
                    text-blend-order:
                        priority: 57
                        visible: *text_visible_service_road
                        text_source: name
                        font:
                            # need fill color?
                            fill: [0.15,0.15,0.15]
                            size: 14px
                            stroke: { color: [1.00,1.00,1.00], width: 2 }
        path:
            filter:
                all:
                    - kind: path
                not:
                    - highway: [steps, track]
                    - man_made: [pier]
            draw:
                lines:
                    color: [[14, [0.97,0.97,0.97]],[16,[0.96,0.96,0.96]]]
                    width: [[14, 0.6px], [16, 1px], [17, 2.5m]]
                    outline:
                        color: [0.799,0.799,0.799]
                        width: [[14, 0], [16, 0.5px], [18, 3px]]
            pedestrian:
                filter: { highway: pedestrian }
                draw:
                    lines:
                        color: [[13, [0.97,0.97,0.97]], [16,[0.96,0.96,0.96]]]
                        width: [[13, 1.5], [15, 1.5], [17, 3m]]
                        outline:
                            color: [0.799,0.799,0.799]
                            width: [[17, 0.5], [18, 1]]
            bridge:
                filter: { is_bridge: yes }
                draw:
                    lines:
                        color: [[15, [1.0,1.0,1.0]], [18, [1.0,1.0,1.0]]]
                        width: [[15, 1.5px], [16, 4m], [17, 2m], [18, 2m]]
                        cap: round
                        outline:
                            color: [[15,*path_bridge_casing2],[16,*path_bridge_casing1]]
                            width: [[15, 0px], [16, 1.0px], [18, 3px]]
                            cap: butt
            in_park:
                # should `forest` and `wood` be included?
                filter: { landuse_kind: [park,nature_reserve,conservation,golf_course,garden] }
                draw:
                    lines:
                        color: [[14,white], [16,white], [17, [0.95,0.95,0.95]]]
                        outline:
                            color: [[16, [0.725,0.847,0.847]], [17, [0.663,0.847,0.843]]]
                            width: [[15, 0px], [16, 0.5px], [18, 3px]]
                golf_course:
                    filter: { landuse_kind: golf_course }
                    draw:
                        lines:
                            outline:
                                color: [0.698,0.835,0.765]
                nature_reserve:
                    filter: { landuse_kind: nature_reserve }
                    draw:
                        lines:
                            outline:
                                color: [0.635,0.819,0.742]
                conservation:
                    filter: { landuse_kind: conservation }
                    draw:
                        lines:
                            outline:
                                color: orange
            in_cemetery_garden:
                filter: { landuse_kind: [cemetery,garden] }
                draw:
                    lines:
                        outline:
                            color: [0.737,0.816,0.753]
                            width: [[15, 0px], [16, 0.5px], [18, 3px]]
            in_zoo:
                filter: { landuse_kind: zoo }
                draw:
                    lines:
                        outline:
                            color: [0.708,0.881,0.831]
                            width: [[15, 0px], [16, 0.5px], [18, 3px]]
            in_university:
                filter: { landuse_kind: university }
                draw:
                    lines:
                        color: [[14, [0.97,0.97,0.97]], [16,[0.96,0.96,0.96]]]
                        outline:
                            color: [0.806,0.763,0.717]
                            # todo: consider starting 14 at 0px so z15 has a little width
                            width: [[15, 0px], [16, 0.5px], [18, 3px]]
            in_hospital:
                filter: { landuse_kind: hospital }
                draw:
                    lines:
                        color: [[14,[0.90,0.90,0.90]],[16,[0.96,0.96,0.96]]]
                        outline:
                            color: [0.847,0.788,0.796]
                            # todo: consider starting 14 at 0px so z15 has a little width
                            width: [[15, 0px], [16, 0.5px], [18, 3px]]
            labels-path:
                filter: { $zoom: { min: 17 } }
                draw:
                    text-blend-order:
                        priority: 58
                        visible: *text_visible_path
                        text_source: name
                        font:
                            # need a fill color?
                            fill: [0.25,0.25,0.25]
                            size: 12px
                            stroke: { color: [1.00,1.00,1.00], width: 1 }
        track:
            filter: { kind: path, highway: track }
            draw:
                lines:
                    color: [[13, *minor_road4], [15, *minor_road3]]
                    width: [[13, 0.5px], [14, 1.0px], [15, 1.0px], [16, 6m]]
                    #color: [[13,*minor_road4],[16,*minor_road3]]
                    #width: [[13, 1.0], [15, 1.5], [17, 3m]]
                    cap: butt
                    join: round
                    outline:
                        order: 354
                        color: *minor_casing1
                        width: [[15, 0px], [16, 0.5px], [17, 1.0px], [18, 2.0px]]
            bridge:
                filter: { is_bridge: yes }
                draw:
                    lines:
                        width: [[15, 3.5], [17, 3m]]
                        cap: round
                        outline:
                            color: [[15,*minor_casing2],[16,*minor_casing1]]
                            width: [[15, 0.5px], [16, 1.0px], [18, 2px]]
                            cap: butt
            in_park:
                filter: { landuse_kind: [park,national_park,nature_reserve,conservation,golf_course,garden] }
                draw:
                    lines:
                        width: [[13, 0.5px], [14, 0.5px], [15, 1.0px], [16, 6m]]
                        outline:
                            color: [[16,*green1_r],[17,*major_casing1]]
                            width: [[15, 0px], [16, 0.25px], [17, 0.5px], [18, 1.0px], [19, 2.0px]]
        steps:
            filter:
                all:
                    - kind: path
                    - highway: steps
            draw:
                dashedline:
                    color: [0.97,0.97,0.97]
                    width: [[14,0.6px],[16,2px],[17,4px],[18,5px],[19,8px],[20,10px]]
                    outline:
                        color: [0.867,0.867,0.867]
                        width: 2px
            in_park:
                filter: { landuse_kind: [park,nature_reserve,conservation,golf_course,garden] }
                draw:
                    dashedline:
                        color: [1.0,1.0,1.0]
                        outline:
                            color: [0.867,0.867,0.867]
            in_university:
                filter: { landuse_kind: university }
                draw:
                    dashedline:
                        color: [1.0,1.0,1.0]
                        outline:
                            color: [0.867,0.867,0.867]
            in_hospital:
                filter: { landuse_kind: hospital }
                draw:
                    dashedline:
                        color: [1.0,1.0,1.0]
                        outline:
                            color: [0.867,0.867,0.867]
            labels-steps:
                filter: { $zoom: { min: 17 } }
                draw:
                    text-blend-order:
                        priority: 59
                        visible: *text_visible_steps
                        text_source: name
                        font:
                            # need fill color?
                            size: 12px
                            stroke: { color: [1.00,1.00,1.00], width: 1 }
        winter_sport_pistes:
            filter: { kind: piste }
            draw:
                lines:
                    order: 388   # We override the server value here because Eraser Map is also a special Ski Map
                    cap: round
                    join: round
                    color: '#909090'
                    width: [[13,0px],[14,0.5px],[15, 1px], [16, 1.5px], [18, 3m]]
                text-blend-order:
                    priority: 18
                    visible: true
                    font:
                        fill: *text_fill_piste
                        size: 12px
                        stroke: { color: *grey8, width: 4 }
            early:
                filter: { $zoom: { max: 15 } }
                draw:
                    text-blend-order:
                        visible: false
            early-z15:
                filter: { $zoom: [15] }
                draw:
                    text-blend-order:
                        font:
                            fill: *text_fill_piste_e
                            size: 11px
            easy:
                filter: { piste_difficulty: easy }
                draw:
                    lines:
                        color: *piste_easy
            intermediate:
                filter: { piste_difficulty: intermediate }
                draw:
                    lines:
                        color: *piste_intermediate
            advanced:
                filter: { piste_difficulty: advanced }
                draw:
                    lines:
                        color: *piste_advanced
                    text-blend-order:
                        text_source: function() { if( feature.name ){ return '◆ ' + feature.name; } else { return '◆'; } }
            expert:
                filter: { piste_difficulty: expert }
                draw:
                    lines:
                        color: *piste_expert
                    text-blend-order:
                        text_source: function() { if( feature.name ){ return '◆◆ ' + feature.name; } else { return '◆◆'; } }
        pier:
            filter: { kind: path, man_made: pier }
            draw:
                lines:
                    color: [0.993,0.993,0.993]
                    width: [[13, 0px], [14, 0.5px],[15, 1.5px], [16, 2.5px],[17, 3px],[18, 3m]]
                    outline:
                        color: [0.675,0.855,0.886]
                        width: [[15, 0px],[16,0.65px], [17, 0.75px], [18, 1px], [19, 1.5px]]
        racetrack:
            filter: { kind: racetrack }
            draw:
                lines:
                    interactive: true
                    cap: round
                    join: round
                    color: [0.600,0.667,0.627]
                    width: [[13,0.5px],[14,1px],[15, 1px], [16, 1.5px], [18, 3px], [19, 5px]]
        airport-lines:
            filter: { kind: minor_road, aeroway: [runway,taxiway] }
            draw:
                lines:
                    color: [[10,[0.4,0.4,0.4]],[11,[0.50,0.50,0.50]],[12,[0.7,0.7,0.7]],[13,[0.75,0.75,0.75]],[14,[0.95,0.95,0.95]]]
                    cap: butt
                    width: [[9,0px],[10,0.75px],[11,1.25px],[12,2px],[13,4px],[14,8px],[15,16px],[16,32px],[17,60m]]
                    # outline:
                    #     color: [17,[0.95,0.95,0.95]]
                    #     width: [17,[60m]]
            # Features come in at zoom 9, but include mostly minor airports without POIs until z13
            early:
                filter: { $zoom: { max: 12 }, not: { landuse_kind: [aerodrome, runway, taxiway] } }
                draw:
                    lines:
                        visible: false
            not-round:
                filter: { $zoom: { min: 17 } }
                draw:
                    lines:
                        cap: butt
            taxiway:
                filter: { aeroway: taxiway }
                draw:
                    lines:
                        color: [[13,[0.913,0.913,0.913]],[15,[0.923,0.923,0.923]],[16,[0.95,0.95,0.95]]]
                        width: [[13,1px],[14,2px],[15,3px],[16,7px],[17,20m]]
                        outline:
                            color: [0.778,0.778,0.797]
                early:
                    filter: { $zoom: { max: 13 } }
                    draw:
                        lines:
                            visible: false
        ferry:
            filter: { kind: ferry }
            draw:
                lines:
                    color: [0.702,0.843,0.933]
                    width: [[12, 0.5px], [14, 1.0px], [15, 1.0px], [16, 1.25px]]
                    outline:
                        width: 0
        aerialway:
            filter: { kind: aerialway }
            draw:
                lines:
                    interactive: true
                    color: '#444'
                    width: [[14, 0.5px], [15, 1.0px], [16, 2m]]
            gondola_cable_car:
                filter: { aerialway: [gondola, cable_car] }
                draw:
                    lines:
                        color: [0.498,0.302,0.243]
                        width: [[12, 0.5px], [13, 0.5px], [14, 0.6px], [15, 1px], [16, 2px]]
                    lines_transparent:
                        color: [0.498,0.302,0.243,0.15]
                        width: [[12, 0px], [13, 5px], [14, 8px], [15, 10px], [16, 12px]]
            chair_lift:
                filter: { aerialway: chair_lift }
                draw:
                    lines:
                        color: [0.493,0.541,0.666]
                        width: [[12, 0.5px], [13, 0.5px], [14, 0.6px], [15, 1px], [16, 1px], [16, 2px], [18, 3m]]
                    lines_transparent:
                        color: [0.635,0.698,0.859,0.20]
                        width: [[12, 0px], [13, 5px], [14, 8px], [15, 10px], [16, 12px], [18, 20px]]
            aerialway-labels:
                filter: { $zoom: { min: 14 } }
                draw:
                    text-blend-order:
                        priority: 59
                        visible: *text_visible_aerialway
                        text_source: name
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *grey8, width: 4 }
                minor:
                    filter: { not: { aerialway: [gondola,cable_car,chair_lift] }, $zoom: { max: 17 } }
                    draw:
                        text-blend-order:
                            visible: false
                early_gondola:
                    filter: { $zoom: [14], aerialway: [gondola,cable_car] }
                    draw:
                        text-blend-order:
                            font:
                                weight: 600
                later:
                    filter: { $zoom: { min: 15 } }
                    draw:
                        text-blend-order:
                            font:
                                weight: 600
        bridges-tunnels:
            filter: { any: [is_bridge: yes, is_tunnel: yes] }
            draw:
                lines:
                    outline:
                        # except bridges and tunnels, their outlines should also self-sort
                        order: function() { return feature.sort_key; }

    buildings:
        data: { source: osm, layer: buildings }
        filter:
            not: { location: underground }
        # set default footprint and extrusion draw properties, but don't draw by default (rules below will turn visibility on)
        draw:
            polygons:
                visible: false
                order: 329
                color: *building2
            lines:
                style: lines
                order: 330
                visible: false
                color: [[14,[0.70,0.70,0.70]],[17,[0.65, 0.65, 0.65]]]
                width: [[14, 0.6px], [15, 0.65px], [16,0.75px], [18, 1.25px]]

        # turn interactive feature selection on for buildings with names
        interactive:
            filter: { name: true }
            draw: { polygons: { interactive: true } }

        # building footprints, pre-extrusion
        footprints:
            filter:
                $zoom: { max: 18 }
                any:
                    # show footprints for buildings at least one zoom level before they will be extruded
                    - { $zoom: [13], area: { min: 50000 } }
                    - { $zoom: [13], height: { min: 250 } }
                    - { $zoom: [13], volume: { min: 200000 } }
                    - { $zoom: [14], area: { min: 5000 } }
                    - { $zoom: [14], height: { min: 190 } }
                    - { $zoom: [14], volume: { min: 150000 } }
                    - { $zoom: [15], height: { min: 100 } }
                    - { $zoom: [15], area: { min: 500 } }
                    - { $zoom: [15], volume: { min: 100000 } }
                    - { $zoom: [16], area: { min: 100 } }
                    - { $zoom: [16], volume: { min: 50000 } }
                    - { $zoom: { min: 17 } }
            draw:
                polygons:
                    visible: true
                lines:
                    visible: true

        # 3d buildings
        extrude:
            filter:
                any:
                    - { $zoom: [15], height: { min: 190 } }
                    - { $zoom: [15], area: { min: 5000 } }
                    - { $zoom: [15], volume: { min: 100000 } }
                    - { $zoom: [16], height: { min: 100 } }
                    - { $zoom: [16], area: { min: 3500 } }
                    - { $zoom: [16], volume: { min: 50000 } }
                    - { $zoom: [17], area: { min: 500 } }
                    - { $zoom: [17], volume: { min: 15000 } }
                    - { $zoom: { min: 18 } }
            draw:
                polygons:
                    visible: true
                    order: 438
                    style: building-grid
                    extrude: function() { return feature.height || 20; }
                    color: [0.892,0.880,0.878]
                lines:
                    visible: true
                    order: 439
                    style: building-lines
                    extrude: function() { return feature.height || 20; }

        # landuse-specific rules
        in_park:
            filter: { landuse_kind: [park,forest,nature_reserve,conservation,golf_course,garden] }
            draw:
                polygons:
                    color: [0.864,0.910,0.905]

            # golf_course:
            #     filter: { landuse_kind: golf_course }
            #     draw:
            #         polygons:
            #             color: *building2
            # nature_reserve:
            #     filter: { landuse_kind: nature_reserve }
            #     draw:
            #         polygons:
            #             color: *building2
            # conservation:
            #     filter: { landuse_kind: conservation }
            #     draw:
            #         polygons:
            #             color: *building2
            # zoo:
            #     filter: { landuse_kind: zoo }
            #     draw:
            #         polygons:
            #             color: *building2
        in_university:
            filter: { landuse_kind: [university,school] }
            draw:
                polygons:
                    color: [0.950,0.917,0.883]
                lines:
                    color: *brown1_bo
        in_hospital:
            filter: { landuse_kind: hospital }
            draw:
                polygons:
                    color: [0.976,0.908,0.913]
        in_airport:
            filter: { landuse_kind: [aerodrome, runway, taxiway] }
            draw:
                polygons:
                    color: *purple_b
                lines:
                    color: *purple_bo
                    width: [[14,0.5px],[15,0.5px],[17,0.5px],[18,0.75px],[19,0.25m]]
        in_retail:
           filter: { landuse_kind: retail }
           draw:
                polygons:
                    color: [0.945, 0.898, 0.878]

    buildings-labels:
        data: { source: osm, layer: buildings }
        filter:
            all:
                - { $zoom: { min: 16 } }
                - $geometry: point
                - not: { location: underground }
                - kind: [false, building, university, college, school, kindergarten]
            any:
                - { $zoom: [16], area: { min: 5000 }, name: true }
                - { $zoom: [16], area: { min: 5000 }, kind: true }
                - { $zoom: [16], area: { min: 10000 }, landuse_kind: true }
                - { $zoom: [16], area: { min: 7000 }, kind: [university, college, school, kindergarten] }
                - { $zoom: [16], volume: { min: 50000 }, name: true }
                - { $zoom: [17], area: { min: 3000 }, name: true }
                - { $zoom: [17], area: { min: 2000 }, kind: [university, college, school, kindergarten] }
                - { $zoom: [18], area: { min: 1000 }, name: true }
                - { $zoom: [18], kind: [university, college, school, kindergarten] }
                - { $zoom: [19], area: { min: 200 }, name: true }
                - { $zoom: { min: 19 }, kind: [university, college, school, kindergarten] }
                - { $zoom: { min: 20 }, name: true }
        draw:
            text-blend-order:
                interactive: true
                move_into_tile: true
                priority: 51
                order: 7
                font:
                    fill: '#666'
                    family: *text_font_family
                    style: italic
                    size: 11px
                    stroke: { color: *text_stroke_address, width: 1 }
        building_labels-z15-z16-z17:
            filter: { $zoom: [15,16,17] }
            draw: { text-blend-order: { font: { size: 12px, stroke: { width: 2 } } } }
        building_labels-z18:
            filter: { $zoom: [18,19] }
            draw: { text-blend-order: { font: { size: 12px, weight: 600, stroke: { width: 3 } } } }
        building_labels-z20-up:
            filter: { $zoom: { min: 20 } }
            draw: { text-blend-order: { font: { size: 14px, weight: 600, stroke: { width: 3 }  } } }
        building-labels-z16:
            filter: function() { if( $zoom == 16 && feature.name.length > 20 ) { return true; } else { return false; } }
            draw:
                text-blend-order:
                    visible: false
        building-labels-z17:
            filter: function() { if( $zoom == 17 && feature.name.length > 30 ) { return true; } else { return false; } }
            draw:
                text-blend-order:
                    visible: false
        building-labels-z20+:
            filter: { $zoom: { min: 20 } }
            draw:
                text-blend-order:
                    text_source: function() { if( feature.addr_housenumber ) { return feature.name + '\n' + feature.addr_housenumber; } else { return feature.name; } }
    address-labels:
        data: { source: osm, layer: buildings }
        filter:
            $zoom: { min: 20 }
            any:
                - kind: address
                - { label_position: yes, addr_housenumber: true, name: false }
        draw:
            text-blend-order:
                interactive: true
                order: 7
                visible: *text_visible_address
                text_source: addr_housenumber
                font:
                    fill: *text_fill_address
                    family: *text_font_family
                    style: italic
                    size: 10px
                    stroke: { color: *text_stroke_address, width: 4 }

    boundaries:
        data: { source: osm, layer: boundaries }
        # country subdivisions (states, provinces)
        draw:
            lines:
                interactive: true
                order: function() { return feature.sort_key; }
#                color: red
#                width: [[9, 1px], [14, 2px], [16, 3px], [17, 8m]]
        country:
            filter:
                any:
                    - type: country
                    - kind: nation
                    - admin_level: 2
            draw:
                lines:
                    interactive: true
                    color: *country_boundary
                    width: [[1, 0.5px], [2, 1.0px], [4, 1.5px], [9, 2.5px], [14, 3.5px], [16, 4.5px], [17, 14m]]
            water:
                filter: { maritime: yes }
                draw:
                    lines:
                        order: function() { return (feature.sort_key - 2); }
                        color: blue
        region:
            filter:
                any:
                    - type: state
                    # territorial here is probably a hack
                    - kind: [state, department, region, provincial, territorial]
                    - admin_level: 4
            draw:
                lines:
                    interactive: true
                    color: *region_boundary
                    width: [[0, 0.5px], [2, 1.0px], [5, 1.25px], [6, 1.5px], [7, 1.75px], [9, 3.5px], [14, 5.5px], [16, 6.5px], [17, 16m]]
            water:
                filter: { maritime_boundary: yes }
                draw:
                    lines:
                        visible: false
            early:
                filter: { scalerank: [0,3,4,5,6,7,8,9,10], $zoom: { max: 8 } }
                draw:
                    lines:
                        visible: false
        city_walls:
            filter: { kind: city_wall }
            draw:
                lines:
                    color: *city_wall
                    width: [[12, 0.75px], [13, 1.0px], [14, 1.2px], [15, 2.0px], [16, 2.5px], [19, 6m]]
        retaining_wall:
            filter: { kind: retaining_wall }
            draw:
                lines:
                    color: *retaining_wall
                    width: [[14, 0.5px], [15, 1.0px], [16, 1.5px], [17, 2.0px], [19, 4m]]
        snow_fence:
            filter: { kind: snow_fence }
            draw:
                lines:
                    color: *snow_fence
                    width: [[14, 0.5px], [15, 1.0px], [16, 1.5px], [17, 2.0px], [19, 1.5m]]
        fence:
            filter: { kind: fence }
            draw:
                lines:
                    color: *fence
                    width: [[14, 0.5px], [15, 1.0px], [16, 1.5px], [17, 2.0px], [19, 1.5m]]


    highway-exit:
        data: { source: osm, layer: [pois] }
        filter: { kind: motorway_junction, $zoom: { min: 14 } }
        draw:
            icons:
                visible: false
            text-blend-order:
                visible: *text_visible_exits
                interactive: true
                text_source: ref
                priority: 52
                font:
                    fill: *text_fill_exits
                    size: [[12,9px],[15,12px],[17,14px]]
                    stroke: { color: *text_stroke, width: [[12,2px],[14,3px],[15,3px]] }
        later:
            filter: { $zoom: { min: 16 } }
            draw:
                text-blend-order:
                    font:
                        weight: 600
    airport-gate:
        data: { source: osm, layer: [pois] }
        filter: { kind: gate, aeroway: gate }
        draw:
            icons:
                visible: false
            text-blend-order:
                visible: true
                interactive: true
                text_source: ref
                font:
                    fill: *text_fill
                    size: [[16,9px],[17,12px],[20,14px]]
                    #stroke: { color: *highway1, width: [[12,2px],[14,3px],[15,3px]] }
        later:
            filter: { $zoom: { min: 19 } }
            draw:
                text-blend-order:
                    font:
                        weight: 600

    pois_and_landuse_labels:
        data: { source: osm, layer: [pois,landuse,buildings] }
        visible: *label_visible_poi_landuse
        filter:
            not: { kind: [building,farm,tree,gate,address,apron] }
            any:
                - area: false
                  all:
                      - $zoom: { min: 12 }
                - area: true
                  all:
                      - $geometry: point
                      - kind: true
        draw:
            icons:
                size: [[13, 12px], [16, 16px], [18, 19px]]
                interactive: true
                visible: false
                priority: 45
            text-blend-order:
                visible: false    # labels are enabled by each layer below
                move_into_tile: false # preserves text alignment w/icons in JS
                anchor: bottom
                offset: [[13, [0, 6px]], [16, [0, 8px]], [18, [0, 10px]]] # offset tracks alongside icon size (half icon height)
                interactive: true
                priority: 46
                font:
                    family: *text_font_family
                    weight: 400
                    fill: [0.20,0.20,0.20]
                    size: 10px
                    stroke: { color: *text_stroke, width: 1 }
        poi_labels-z14:
            filter: { $zoom: [14] }
            draw: { text-blend-order: { font: { size: 11px } } }
        poi_labels-z15:
            filter: { $zoom: [15,16,17] }
            draw: { text-blend-order: { font: { size: 12px, stroke: { width: 2 } } } }
        poi_labels-z18:
            filter: { $zoom: [18,19] }
            draw: { text-blend-order: { font: { size: 12px, weight: 600, stroke: { width: 3 } } } }
        poi_labels-z20-up:
            filter: { $zoom: { min: 20 } }
            draw: { text-blend-order: { font: { size: 14px, weight: 600, stroke: { width: 3 }  } } }
        no-name:
            filter: { name: false }
            sports-pitch:
                filter: { kind: [grass, pitch], $geometry: point, area: true, $zoom: { min: 17 } }
                draw:
                    icons:
                        sprite: function() { return feature.sport }
                        visible: *icon_visible_poi_landuse_e
                        priority: 49
                baseball:
                    filter: { sport: baseball }
                    draw: { icons: { sprite: baseball-field } }
                basketball:
                    filter: { sport: basketball }
                    draw: { icons: { sprite: basketball-court } }
                football:
                    filter: { sport: football }
                    draw: { icons: { sprite: football-stadium } }
                hockey:
                    filter: { sport: hockey-field }
                    draw: { icons: { sprite: hockey-field } }
                soccer:
                    filter: { sport: soccer }
                    draw: { icons: { sprite: soccer-field } }
                tennis:
                    filter: { sport: tennis }
                    draw: { icons: { sprite: tennis } }
            toilets:
                filter: { kind: toilets, $zoom: { min: 18 }  }
                draw: { icons: { sprite: toilets, visible: *icon_visible_poi_landuse_e } }
            playground:
                filter: { kind: playground, $zoom: { min: 18 }  }
                draw: { icons: { sprite: playground, visible: *icon_visible_poi_landuse_e } }
            picnic_site:
                filter: { kind: picnic_site, $zoom: { min: 18 }  }
                draw: { icons: { sprite: picnic-spot, visible: *icon_visible_poi_landuse_e } }
            information:
                filter: { kind: information, $zoom: { min: 18 }  }
                draw: { icons: { sprite: information, visible: *icon_visible_poi_landuse_e } }
            drinking-water:
                filter: { kind: drinking_water, $zoom: { min: 18 }  }
                draw: { icons: { sprite: drinking-water, visible: *icon_visible_poi_landuse_e } }
            traffic-signal:
                filter: { kind: traffic_signals, $zoom: { min: 18 } }
                draw:   { icons: { sprite: traffic-signal, visible: *icon_visible_poi_landuse_e } }
            bicycle-parking:
                filter: { kind: [bicycle_parking], $zoom: { min: 19 } }
                draw:   { icons: { sprite: bicycle-parking, visible: *icon_visible_poi_landuse_e } }
            car-parking:
                filter: { kind: [parking], $zoom: { min: 17 } }
                draw:   { icons: { sprite: parking, visible: *icon_visible_poi_landuse_e } }
        has-name:
            filter: { name: true }
            # match 1:1 correlations between data and sprite name
            direct-match:
                filter: { area: false }
                draw:
                    icons:
                        # sprite_source: kind
                        sprite: function() { return feature.kind; }
                        visible: *icon_visible_poi_landuse

            # add generic icon at high zoom, if direct match fails
            generic-icons:
                filter: { $zoom: { min: 18 }, area: false }
                draw:
                    icons:
                        sprite_default: generic
                        visible: *icon_visible_poi_landuse
                        priority: 47

            # add generic icon at high zoom
            default-label-names:
                filter: { $zoom: { min: 13 }, area: false }
                draw:
                    text-blend-order:
                        visible: *text_visible_poi_landuse
                        priority: 48

            landuse-labels-green-areas-national-park:
                filter:
                    all:
                        - area: true
                        - $geometry: point
                        - kind: [national_park, "park or protected land"]
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [4],  area: { min: 3000000000 } }
                        - { $zoom: [5],  area: { min: 3000000000 } }
                        - { $zoom: [6],  area: { min: 500000000 } }
                        - { $zoom: [7,8,9],  area: { min: 100000000 } }
                        - { $zoom: [10], area: { min: 50000000 } }
                        - { $zoom: [11], area: { min: 25000000 } }
                        - { $zoom: [12], area: { min: 5000000 } }
                        - { $zoom: [13], area: { min: 200000 } }
                        - { $zoom: [14], area: { min: 50000 } }
                        - { $zoom: { min: 15 } }
                national-park:
                    # yosemite national park, joshua tree national park
                    filter: function() { return feature.name && feature.name.indexOf("National Park") > -1; }
                    visible: *label_visible_landuse_green
                    draw:
                        icons:
                            visible: *icon_visible_landuse_green
                            sprite: park
                            priority: 41
                        text-blend-order:
                            visible: *text_visible_landuse_green
                            priority: 42
                            font:
                                fill: [0.200,0.409,0.398] #*text_fill_park
                                style: italic
                                # stroke: { color: [0.870,0.870,0.870], width: 3px }
                    natl-park-labels-z4-z6:
                        filter: { $zoom: [4,5,6] }
                        draw:
                            icons:
                                visible: false
                            text-blend-order: { font: { size: 10px, stroke: { width: 2px } } }
                    natl-park-labels-z7:
                        filter: { $zoom: [7] }
                        draw:
                            text-blend-order: { font: { size: 10px, stroke: { width: 2px } } }
                    natl-park-labels-z8:
                        filter: { $zoom: [8,9] }
                        draw:
                            text-blend-order: { font: { size: 11px, stroke: { width: 2px } } }
                    natl-park-labels-z10:
                        filter: { $zoom: {min: 10, max: 14 } }
                        draw:
                            text-blend-order: { font: { size: 12px } }

            landuse-labels-green-areas-not-national-park:
                filter:
                    all:
                        - area: true
                        - $geometry: point
                        - kind: [park, national_park, "park or protected land",conservation, protected_area, nature_reserve, forest, grass]
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [5],    area: { min: 10000000000 } }
                        - { $zoom: [6,7],  area: { min: 5000000000 } }
                        - { $zoom: [8],    area: { min: 1000000000 } }
                        - { $zoom: [9],    area: { min: 100000000 } }
                        - { $zoom: [10],   area: { min: 50000000 } }
                        - { $zoom: [11],   area: { min: 25000000 } }
                        - { $zoom: [12],   area: { min: 5000000 } }
                        - { $zoom: [13],   area: { min: 200000 } }
                        - { $zoom: [14],   area: { min: 50000 } }
                        - { $zoom: [15],   area: { min: 10000 } }
                        - { $zoom: [16],   area: { min: 1000 } }
                        - { $zoom: { min: 17 } }
                not-national-park:
                    filter: function() { return !( feature.name.indexOf("National Park") > -1 ); }
                    draw:
                        icons:
                            visible: *icon_visible_landuse_green
                            sprite: park
                            priority: 41
                        text-blend-order:
                            visible: *text_visible_landuse_green
                            priority: 42
                            font:
                                fill: [0.181,0.370,0.361]
#                                size: 12px
#                                weight: 400
                                style: italic
                                # stroke: { color: [0.870,0.870,0.870], width: 2 }
                    green-areas-z6:
                        # mojave national preserve
                        filter: { $zoom: [6] }
                        draw:
                            icons: { visible: false }
                            text-blend-order: { font: { size: 10px, stroke: { width: 2px } } }
                    green-areas-z7:
                        filter: { $zoom: [7] }
                        draw:
                            icons: { visible: false }
                            text-blend-order: { font: { size: 10px } }
                    green-areas-z8-z9:
                        filter: { $zoom: { min: 8, max: 14 } }
                        draw:
                            text-blend-order: { font: { size: 11px } }
                    wilderness-areas-early:
                       filter: function() { return $zoom < 10 && feature.name && (feature.name.indexOf("Wilderness") > -1 || feature.name.indexOf("BLM") > -1) }
                       draw:
                           text-blend-order: { visible: false }
                           icons: { visible: false }
                    early-not-national-park:
                        filter: { not: { kind: national_park }, $zoom: { max: 6 } }
                        draw:
                            text-blend-order: { visible: false }
                            icons: { visible: false }
                    not-national-park:
                        filter: function() { return feature.name && feature.name.indexOf("Park") > -1 }
                        # draw:
                        #     icons:
                        #         sprite: park
                        early:
                            filter: { $zoom: { max: 8 } }
                            draw:
                                text-blend-order: { visible: false }
                                icons: { visible: false }
                    forest:
                        filter: function() { return $zoom < 8 && ((feature.name && feature.name.indexOf("Forest") > -1) || feature.protect_class >=6) }
                        draw:
                            text-blend-order: { visible: false }
                            icons: { visible: false }
                    hide-till-later:
                        filter: { kind: [grass], $zoom: { max: 16 } }
                        draw:
                            text-blend-order: { visible: false }
                            icons: { visible: false }
                    only-text-later:
                        filter: { kind: [grass], $zoom: { min: 16 } }
                        draw:
                            text-blend-order: { font: { style: italic } }
                            icons: { visible: false }
            beach:
                filter:
                    all:
                        - area: true
                        - $geometry: point
                        - kind: [beach]
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [10],   area: { min: 300000 } }
                        - { $zoom: [11],   area: { min: 100000 } }
                        - { $zoom: [12],   area: { min: 50000 } }
                        - { $zoom: [13],   area: { min: 50000 } }
                        - { $zoom: [14],   area: { min: 20000 } }
                        - { $zoom: [15],   area: { min: 10000 } }
                        - { $zoom: [16],   area: { min: 1000 } }
                        - { $zoom: { min: 17 } }
                draw:
                    icons:
                        visible: *icon_visible_landuse_green
                        interactive: true
                        sprite: beach
                    text-blend-order:
                        visible: *text_visible_landuse_green
                        interactive: true
                        font:
                            fill: *text_fill_beach
                            stroke:
                                color: *text_stroke_park
            airport:
                filter:
                    all:
                        - kind: [airport, aerodrome]
                        - area: true
                        - $geometry: point
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [9],  area: { min: 10000000 } }
                        - { $zoom: [10], area: { min: 10000000 } }
                        - { $zoom: [11], area: { min: 5000000 } }
                        - { $zoom: [12], area: { min: 5000000 } }
                        - { $zoom: [13], area: { min: 500000 } }
                        - { $zoom: [14], area: { min: 20000 } }
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [15], area: { min: 10000 } }
                        - { $zoom: [16], area: { min: 5000 } }
                        - { $zoom: [17], area: { min: 2000 } }
                        - { $zoom: { min: 18 } }
                draw:
                    icons:
                        sprite: airport
                        visible: *icon_visible_landuse_green
                        priority: 42
                    text-blend-order:
                        visible: *text_visible_landuse_green
                        priority: 41
                        text_source: function() { if(feature.iata) { return feature.name + ' (' + feature.iata + ')'; } else { return feature.name; } }
                        font:
                            fill: [0.20,0.20,0.20] # *text_fill
                            #size: 11px
                            stroke: { color: *text_stroke, width: 4 }
                early:
                    filter: { $zoom: [9,10,11] }
                    # todo: huh?
                    draw: { text-blend-order: { text_source: iata, font: { size: 11px } } }
                early2:
                    filter: { $zoom: { min: 12, max: 14 } }
                    draw: { text-blend-order: { font: { size: 11px } } }
            university:
                filter:
                    all:
                        - kind: [university, college]
                        - area: true
                        - $geometry: point
                        - not: { $layer: buildings }
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [9],   area: { min: 10000000 } }
                        - { $zoom: [10], area: { min: 5000000 } }
                        - { $zoom: [11], area: { min: 2000000 } }
                        - { $zoom: [12], area: { min: 500000 } }
                        - { $zoom: [13], area: { min: 100000 } }
                        - { $zoom: [14], area: { min: 100000 } }
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [15], area: { min: 40000 } }
                        - { $zoom: [16], area: { min: 5000 } }
                        - { $zoom: [17], area: { min: 2000 } }
                        - { $zoom: { min: 18 } }
                visible: *label_visible_landuse_green
                draw:
                    icons:
                        sprite: college-university
                        visible: *icon_visible_landuse_green
                        priority: 41
                    text-blend-order:
                        visible: *text_visible_landuse_green
                        priority: 42
                        font:
                            weight: 600
                            fill: [0.20,0.20,0.20]
                            #size: 10px
                            # stroke: { color: *text_stroke, width: 4 }
                early:
                    filter: { $zoom: { max: 12 } }
                    draw: { text-blend-order: { visible: false } }
                early2:
                    filter: { $zoom: { min: 12, max: 14 } }
                    draw: { text-blend-order: { size: 11px } }
            school:
                filter:
                    all:
                        - kind: [school, kindergarten]
                        - area: true
                        - $geometry: point
                        - not: { $layer: buildings }
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [13], area: { min: 100000 } }
                        - { $zoom: [14], area: { min: 50000 } }
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [15], area: { min: 10000 } }
                        - { $zoom: [16], area: { min: 5000 } }
                        - { $zoom: [17], area: { min: 2000 } }
                        - { $zoom: { min: 18 } }
                draw:
                    icons:
                        sprite: school
                        visible: *icon_visible_landuse_green
                        priority: 41
                    text-blend-order:
                        visible: *text_visible_landuse_green
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *text_stroke, width: 4 }
                early:
                    filter: { $zoom: { max: 14 } }
                    draw: { text-blend-order: { font: { size: 11px } } }
            winter_sports:
                filter:
                    all:
                        - kind: winter_sports
                        - area: true
                        - $geometry: point
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [10], area: { min: 5000000 } }
                        - { $zoom: [11], area: { min: 2000000 } }
                        - { $zoom: [12], area: { min: 500000 } }
                        - { $zoom: [13], area: { min: 100000 } }
                        - { $zoom: [14], area: { min: 100000 } }
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [15], area: { min: 40000 } }
                        - { $zoom: [16], area: { min: 5000 } }
                        - { $zoom: [17], area: { min: 2000 } }
                        - { $zoom: { min: 18 } }
                draw:
                    text-blend-order:
                        visible: *text_visible_landuse_green
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *text_stroke, width: 4 }
                    icons:
                        sprite: ski-area
                        visible: *icon_visible_landuse_green
                        priority: 41
                early:
                    filter: { $zoom: { max: 14 } }
                    draw: { text-blend-order: { font: { size: 10px } } }
            tourism-related:
                filter:
                    all:
                        - kind: [zoo, theme_park, resort, aquarium, winery, maze, stadium]
                        - area: true
                        - $geometry: point
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: { min: 11 }, area: { min: 400000 } }
                        - { $zoom: { min: 12 }, area: { min: 200000 } }
                        - { $zoom: { min: 13 }, area: { min: 50000 } }
                        - { $zoom: { min: 14 }, area: { min: 20000 } }
                        - { $zoom: { min: 15 }, area: { min: 10000 } }
                        - { $zoom: { min: 15 }, area: { min: 2000 } }
                        - { $zoom: { min: 16 } }
                draw:
                    icons:
                        sprite: function() { return feature.kind; }
                        sprite_default: generic
                        visible: *icon_visible_poi_landuse
                        priority: 43
                    text-blend-order:
                        visible: *text_visible_poi_landuse
                        priority: 44
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *text_stroke, width: 4 }
                early-sizing:
                    filter: { $zoom: { max: 14 } }
                    draw: { text-blend-order: { size: 11px } }
            landuse-labels-not-green-areas:
                filter:
                    all:
                        - $zoom: { min: 6 }
                        - area: true
                        - $geometry: point
                        - not: { kind: [park, national_park, "park or protected land", conservation, protected_area, nature_reserve, airport, aerodrome, university, college, school, kindergarten, winter_sports, zoo, theme_park, resort, aquarium, winery, maze, stadium] }
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [5,6,7], area: { min: 5000000000 } }
                        - { $zoom: [8],     area: { min: 1600000000 } }
                        - { $zoom: [9],     area: { min: 400000000 } }
                        - { $zoom: [10],    area: { min: 100000000 } }
                        - { $zoom: [11],    area: { min: 25000000 } }
                        - { $zoom: [12],    area: { min: 5000000 } }
                        - { $zoom: [13],    area: { min: 1000000 } }
                        - { $zoom: [14],    area: { min: 100000 } }
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [15],    area: { min: 5000 } }
                        - { $zoom: [16],    area: { min: 2000 } }
                        - { $zoom: { min: 17 } }
                draw:
                    icons:
                        sprite: function() { return feature.kind; }
                        sprite_default: generic
                        visible: *icon_visible_poi_landuse
                        priority: 43
                    text-blend-order:
                        visible: *text_visible_poi_landuse
                        priority: 44
                        font:
                            fill: [0.20,0.20,0.20] # *text_fill
#                            size: 10px
                            weight: 600
                            stroke: { color: *text_stroke, width: 4 }
                early-sizing:
                    filter: { $zoom: { max: 14 } }
                    draw: { text-blend-order: { size: 11px } }
                building-like:
                    filter: { kind: [commercial,residential,warehouse,public,dormitory], osm_relation: false }
                    draw:
                        icons:
                            sprite: building
#                residential-relations-paris-wtf:
#                    filter: { kind: [residential], osm_relation: true }
#                    draw:
#                        icons:
#                            text-blend-order: { visible: true, text_source: short_name, font: { fill: red } }
#                            icons: { sprite: park, visible: true }
                hide-till-later:
                    filter: { kind: [pedestrian,common,railway,ship,houseboat,common,grass,wetland,pitch], $zoom: { max: 17 } }
                    draw:
                        text-blend-order: { visible: false }
                        icons: { visible: false }
                only-text-later:
                    filter: { kind: [pedestrian,common,railway,ship,houseboat,common,grass,wetland,pitch], $zoom: { min: 17 } }
                    draw:
                        text-blend-order: { font: { style: italic } }
                        icons: { visible: false }
                burial_vault-early:
                    filter: { kind: [burial_vault], $zoom: { max: 19 } }
                    draw:
                        text-blend-order:  { visible: false }
                        icons: { visible: false }
            university-poi:
                filter: { kind: [university, college], area: false, $zoom: { max: 16 } }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }
            office-early:
                filter:
                    any:
                        - { kind: [insurance, office, company], $zoom: [15], area: { max: 10000 } }
                        - { kind: [insurance, office, company], $zoom: [16], area: { max: 5000 } }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }
            bank-early:
                filter: { kind: [bank], $zoom: { max: 17 } }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }
            post-office-early:
                filter: { kind: [post_office], $zoom: { max: 14 } }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }
            atm-early:
                filter: { kind: [atm], $zoom: { max: 18 } }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }
            bicycle-parking-early:
                filter: { kind: [bicycle_parking], $zoom: { max: 19 } }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }
            yes-early:
                filter: { kind: [yes], $zoom: { max: 18 } }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }
            peak-early:
                filter: { kind: [peak], $zoom: { max: 16 } }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }
            drinking-water-early:
                filter: { kind: [drinking_water], $zoom: { max: 18 } }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }
            memorial-early:
                filter: { kind: [memorial], $zoom: { max: 13 } }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }
            animal-points-early:
                filter: { kind: [animal], area: false, $zoom: { max: 18 } }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }
#            animal-areas-early:
#                filter: { kind: [animal], area: { min: 500 }, $zoom: { max: 18 } }
#                draw:
#                    text-blend-order:  { visible: false }
#                    icons: { visible: false }
            parking-labels-early:
                filter:
                    kind: [parking]
                    $zoom: { max: 18 }
                draw:
                    text-blend-order:
                        visible: false
                    icons:
                        visible: false
            parking-labels:
                filter:
                    kind: [parking]
                    $zoom: { min: 18 }
                draw:
                    text-blend-order:
                        visible: *text_visible_poi_landuse
                        font:
                            fill: [0.20,0.20,0.20] #*text_fill
                            size: 10px
                            stroke: { color: *text_stroke, width: 4 }
            landuse-funky:
                filter: { kind: [commercial, residential, wood], $zoom: { max: 17 } }
                draw:
                    text-blend-order:
                        visible: false
            car-sharing:
                filter: { kind: car_sharing }
                icons-early:
                    filter: { $zoom: { max: 17 } }
                    draw:
                        icons:
                            visible: false
                text-labels-early:
                    filter: { $zoom: { max: 19 } }
                    draw:
                        text-blend-order:
                            visible: false
            tower:
                filter: { kind: [tower], label_placement: yes }
                draw:
                    icons:
                        visible: false
                    text-blend-order:
                        font:
                            style: italic
            station-train-subway:
                filter: { kind: [station, train-station, train_station], $zoom: { min: 11 } }
                visible: *label_visible_station
                draw:
                    icons:
                        visible: *icon_visible_station
                        sprite: train-station
                        size: [[13, 12px], [14, 12px], [15, 16px], [17, 18px], [18, 20px]]
                        priority: 41
                    text-blend-order:
                        visible: *text_visible_station
                        offset: [[13, [0, 6px]], [14, [0, 6px]],[15, [0, 8px]], [17, [0, 9px]], [18, [0, 10px]]]
                        priority: 42
                low-priority-early:
                    filter: { kind_tile_rank: { min: 5 }, $zoom: { min: 0, max: 13 } }
                    draw:
                        icons:
                            visible: false
                            #size: [[12, 10px], [14, 10px], [15, 16px]]
                        text-blend-order: { visible: false }
                low-priority-early-z13:
                    filter: { kind_tile_rank: { min: 5 }, $zoom: [13] }
                    draw:
                        icons:
                            visible: false
                            #size: [[12, 10px], [14, 10px], [15, 16px]]
                        text-blend-order: { visible: false }
                low-priority-early-z14:
                    filter: { kind_tile_rank: { min: 7 }, $zoom: [14] }
                    draw:
                        #icons:
                            #size: [[14, 11px], [15, 16px], [17, 18px], [18, 20px]]
                            #visible: false
                        text-blend-order: { visible: false }
            tram-stop-early:
                filter: { kind: tram_stop, $zoom: { max: 15 } }
                draw:
                    icons:
                        visible: false
            tram-stop-early-z15:
                filter: { kind: tram_stop, $zoom: [15] }
                draw:
                    text-blend-order:
                        visible: false
            tram-stop:
                filter: { kind: tram_stop, $zoom: { min: 15 } }
                draw:
                    icons:
                        size: [[13, 12px], [16, 18px]]
                    text-blend-order:
                        offset: [[13, [0, 6px]], [16, [0, 9px]]]
            bus-stop-bus-station-labels:
                filter:
                    kind: [bus_stop, bus_station]
                    $zoom: { min: 18 }
                draw:
                    text-blend-order:
                        visible: *text_visible_poi_landuse
                        font:
                            fill: [0.20,0.20,0.20] # *text_fill
                            size: 11px
                            stroke: { color: *text_stroke, width: 4 }
                bus_stop:
                    filter:
                        kind: [bus_stop]
                        $zoom: { max: 19 }
                    draw:
                        icons:
                            size: [[13, 8px], [19, 18px]]
                        text-blend-order:
                            visible: false
            minor-z17-early:
                filter:
                    kind: [accountant, administrative, advertising_agency, architect, association, atm, bakery, bed_and_breakfast, bicycle, bicycle_parking, bicycle_rental, books, bus_stop, bus_stop, butcher, car, car_repair, chalet, clothes, company, computer, consulting, convenience, doityourself, drinking_water, dry_cleaning, educational_institution, emergency_phone, employment_agency, estate_agent, fashion, financial, florist, foundation, gate, gift, government, greengrocer, guest_house, hairdresser, hostel, hotel, insurance, it, jewelry, lawyer, mast, memorial, mobile_phone, motel, newspaper, ngo, notary, optician, parking, pet, physician, playground, political_party, post_box, religion, research, slipway, subway_entrance, tax_advisor, telecommunication, telephone, theatre, therapist, toilets, traffic_signals, travel_agent, water_tower, yes]
                    area: false
                    $zoom: { max: 17 }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }
            minor-z18-early:
                filter:
                    kind: [bench, waste_basket]
                    area: false
                    $zoom: { max: 18 }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }

            icons:
                adult-boutique:
                    filter: { kind: [erotic, adult_boutique] }
                    draw:   { icons: { sprite: adult-boutique } }
                allotments:
                    filter: { kind: [allotments] }
                    draw:   { icons: { sprite: garden } }
                airport:
                    filter: { kind: [airport, aerodrome] }
                    draw:   { icons: { sprite: airport } }
                animal-shelter:
                    filter: { kind: [animal_shelter, animal-shelter, animal_boarding] }
                    draw:   { icons: { sprite: animal-shelter } }
                antique-shop:
                    filter: { kind: [antiques, antique-shop] }
                    draw:   { icons: { sprite: antique-shop } }
                art-gallery:
                    filter: { kind: [art_gallery, art-gallery, art, artwork] }
                    draw:   { icons: { sprite: art-gallery } }
                athletics-sports:
                    filter: { kind: [athletic_sports, recreation_ground, sports_centre] }
                    draw:   { icons: { sprite: athletics-sports } }
                automotive-shop:
                    filter: { kind: [car_repair, automotive-shop, automotive, tyres] }
                    draw:   { icons: { sprite: automotive-shop } }
                bakery:
                    filter: { kind: [bakery, pastry, chocolate] }
                    draw:   { icons: { sprite: bakery } }
                bar:
                    filter: { kind: [pub, bar] }
                    draw:   { icons: { sprite: bar } }
                beer-garden:
                    filter: { kind: [biergarten, beer-garden, brewery] }
                    draw:   { icons: { sprite: beer-garden } }
                bike-shop:
                    filter: { kind: [bicycle, bicycle_rental, bike, bike_shop] }
                    draw:   { icons: { sprite: bike-shop } }
                bicycle-parking:
                    filter: { kind: [bicycle_parking] }
                    draw:   { icons: { sprite: bicycle-parking } }
                boat-ferry:
                    filter: { kind: [ferry_terminal, boat-ferry, ferry-boat, ferry] }
                    draw:   { icons: { sprite: boat-ferry } }
                boat-ramp:
                    filter: { kind: [slipway, boat-ramp, boat_ramp] }
                    draw:   { icons: { sprite: boat-ramp } }
                bookstore:
                    filter: { kind: [books, bookstore] }
                    draw:   { icons: { sprite: bookstore } }
                bowling-alley:
                    filter: { kind: [bowling_alley, bowling-alley] }
                    draw:   { icons: { sprite: bowling-alley } }
                bridal-shop:
                    filter: { kind: [bridal, bridal-shop] }
                    draw:   { icons: { sprite: bridal-shop } }
                building-icon:
                    filter: { kind: [building, auditorium, terminal, hangar, retirement_home, manor, recreation_center, apartments] }
                    draw:   { icons: { sprite: building } }
                    early:
                        filter:
                            any:
                                # show labels for smaller landuse areas at higher zooms
                                - { $zoom: [14], area: { max: 200000 } }
                                - { $zoom: [15], area: { max: 20000 } }
                                - { $zoom: [16], area: { max: 5000 } }
                                - { $zoom: [17], area: { max: 1000 } }
                        draw:
                            text-blend-order:
                                visible: false
                            icons:
                                visible: false
                burger:
                    filter: { kind: [fast_food, burger] }
                    draw:   { icons: { sprite: burger } }
                bus-station:
                    filter: { kind: [bus_stop, bus_station] }
                    draw:   { icons: { sprite: bus-station } }
                camera-store:
                    filter: { kind: [camera, camera-store, photo] }
                    draw:   { icons: { sprite: camera-store } }
                campground:
                    filter: { kind: [campground, camp_site, caravan_site] }
                    draw:   { icons: { sprite: campground } }
                candy-store:
                    filter: { kind: [candy, candy-store, confectionery] }
                    draw:   { icons: { sprite: candy-store } }
                car-dealership:
                    filter: { kind: [car, car-dealership] }
                    draw:   { icons: { sprite: car-dealership } }
                car-wash:
                    filter: { kind: [car_wash, car-wash] }
                    draw:   { icons: { sprite: car-wash } }
                castle:
                    filter: { kind: [castle, fort] }
                    draw:   { icons: { sprite: castle } }
                cemetery:
                    filter: { kind: [grave_yard, cemetery] }
                    draw:   { icons: { sprite: cemetery } }
                cheese-shop:
                    filter: { kind: [cheese, cheese-shop] }
                    draw:   { icons: { sprite: cheese-shop } }
                clothing-store:
                    filter: { kind: [clothes, chothing-store, "clothes store", fashion] }
                    draw:   { icons: { sprite: clothing-store } }
                coffee-shop:
                    filter: { kind: [cafe, coffee-shop] }
                    draw:   { icons: { sprite: coffee-shop } }
                college-university:
                    filter: { kind: [university, college, college-university], area: false }
                    draw:   { icons: { sprite: college-university } }
                concert-hall:
                    filter: { kind: [music_venue] }
                    draw:   { icons: { sprite: concert-hall } }
                convenience-store:
                    filter: { kind: [convenience, convenience-store, convenience_store, beverages] }
                    draw:   { icons: { sprite: convenience-store } }
                cosmetics-shop:
                    filter: { kind: [cosmetics, cosmetics-shop, beauty] }
                    draw:   { icons: { sprite: cosmetics-shop } }
                department-store:
                    filter: { kind: [department_store, department-store] }
                    draw:   { icons: { sprite: department-store } }
                dog-run:
                    filter: { kind: [dog_park, dog_run, dog-run] }
                    draw:   { icons: { sprite: dog-run } }
                drinking-water:
                    filter: { kind: drinking_water }
                    draw: { icons: { sprite: drinking-water } }
                dry-cleaning:
                    filter: { kind: [dry_cleaning] }
                    draw:   { icons: { sprite: dry-cleaning } }
                electronics-store:
                    filter: { kind: [electronics, electronics-store, computer] }
                    draw:   { icons: { sprite: electronics-store } }
                factory:
                    filter: { kind: [factory, industrial, chimney, sub_station, substation, wastewater_plant, works, water_works, plant, generator] }
                    draw:   { icons: { sprite: factory } }
                farmers-market:
                    filter: { kind: [farmers_market, farmers-market] }
                    draw:   { icons: { sprite: farmers-market } }
                fire-station:
                    filter: { kind: [fire_station, fire-station] }
                    draw:   { icons: { sprite: fire-station } }
                fish-market:
                    filter: { kind: [fish, fish-market, seafood, fishmonger] }
                    draw:   { icons: { sprite: fish-market } }
                fishing-spot:
                    filter: { kind: [fishing_spot, fishing-spot, fishing] }
                    draw:   { icons: { sprite: fishing-spot } }
                fitness:
                    filter: { kind: [gym, fitness, fitness_center] }
                    draw:   { icons: { sprite: fitness } }
                flea-market:
                    filter: { kind: [flea_market, flea-market] }
                    draw:   { icons: { sprite: flea-market } }
                flower-shop:
                    filter: { kind: [florist, flower-shop] }
                    draw:   { icons: { sprite: flower-shop } }
                forest:
                    filter: { kind: [forest, conservation, wood] }
                    draw:   { icons: { sprite: forest } }
                furniture-store:
                    filter: { kind: [furniture, furniture-store] }
                    draw:   { icons: { sprite: furniture-store } }
                garden-center:
                    filter: { kind: [garden_centre, garden_center] }
                    draw:   { icons: { sprite: garden-center } }
                gas-station:
                    filter: { kind: [fuel, gas-station] }
                    draw:   { icons: { sprite: gas-station } }
                general-entertainment:
                    filter: { kind: [ticket, general_entertainment] }
                    draw:   { icons: { sprite: general-entertainment } }
                generic:
                    filter: { kind: [generic] }
                    draw:   { icons: { sprite: generic } }
                gift-shop:
                    filter: { kind: [gift, gift-shop] }
                    draw:   { icons: { sprite: gift-shop } }
                golf-course:
                    filter: { kind: [golf-course, golf_course] }
                    draw:   { icons: { sprite: golf-course } }
                government-building:
                    filter: { kind: [townhall, public_building, embassy] }
                    draw:   { icons: { sprite: government-building } }
                grocery-store:
                    filter: { kind: [supermarket, grocery-store, health_food, greengrocer] }
                    draw:   { icons: { sprite: grocery-store } }
                harbor-marina:
                    filter: { kind: [marina, harbor, harbor-marina, harbor_marina, dock, mooring] }
                    draw:   { icons: { sprite: harbor-marina } }
                hardware-store:
                    filter: { kind: [hardware, hardware-store, doityourself, paint] }
                    draw:   { icons: { sprite: hardware-store } }
                hiking-trail:
                    filter: { kind: [trailhead, hiking_trail] }
                    draw:   { icons: { sprite: hiking-trail } }
                hotel:
                    filter: { kind: [hotel, motel, hostel] }
                    draw:   { icons: { sprite: hotel } }
                hunting-supply:
                    filter: { kind: [hunting, fishing] }
                    draw:   { icons: { sprite: hunting-supply } }
                ice-cream-shop:
                    filter: { kind: [ice_cream] }
                    draw:   { icons: { sprite: ice-cream-shop } }
                information:
                    filter: { kind: [info, information] }
                    draw:   { icons: { sprite: information } }
                jewelry-store:
                    filter: { kind: [jewelry, jewelry_store, jewelry-store] }
                    draw:   { icons: { sprite: jewelry-store } }
                landmark:
                    filter: { kind: [landmark, memorial, monument, wayside_shrine, beacon] }
                    draw:   { icons: { sprite: landmark } }
                tower:
                    filter: { kind: [tower], label_placement: false }
                    draw:   { icons: { sprite: landmark } }
                laundry:
                    filter: { kind: [laundry] }
                    draw:   { icons: { sprite: laundry } }
                light-rail:
                    filter: { kind: [light-rail, light_rail, tram_stop] }
                    draw:   { icons: { sprite: light-rail } }
                liquor-store:
                    filter: { kind: [alcohol, liquor-store, liquor] }
                    draw:   { icons: { sprite: liquor-store } }
                market:
                    filter: { kind: [market, variety_store, boutique, dairy, retail] }
                    draw:   { icons: { sprite: market } }
                mine:
                    filter: { kind: [mind, quarry, mineshaft, adit] }
                    draw:   { icons: { sprite: mine } }
                miscellaneous-shop:
                    filter: { kind: [houseware, miscellaneous-shop] }
                    draw:   { icons: { sprite: miscellaneous-shop } }
                mobile-phone-shop:
                    filter: { kind: [mobile_phone] }
                    draw:   { icons: { sprite: mobile-phone-shop } }
                motorcycle-shop:
                    filter: { kind: [motorcycle, motorcycle_shop, motorcycle_repair] }
                    draw:   { icons: { sprite: motorcycle-shop } }
                mountain:
                    filter: { kind: [mountain, peak] }
                    draw:   { icons: { sprite: mountain } }
                movie-theatre:
                    filter: { kind: [cinema, movie-theatre, movie-theater] }
                    draw:   { icons: { sprite: movie-theatre } }
                museum:
                    filter: { kind: [museum, observatory] }
                    draw:   { icons: { sprite: museum } }
                music-store:
                    filter: { kind: [music, music-store, musical_instrument] }
                    draw:   { icons: { sprite: music-store } }
                newsstand:
                    filter: { kind: [kiosk, newsstand, newsagent] }
                    draw:   { icons: { sprite: newsstand } }
                nightlife:
                    filter: { kind: [nightclub, nightlife] }
                    draw:   { icons: { sprite: nightlife } }
                office:
                    filter: { kind: [insurance, office, company] }
                    draw:   { icons: { sprite: office } }
                office-supplies:
                    filter: { kind: [office_supplies, office-supplies, stationery] }
                    draw:   { icons: { sprite: office-supplies } }
                optical-shop:
                    filter: { kind: [optician, optical_shop, optical-shop] }
                    draw:   { icons: { sprite: optical-shop } }
                performing-arts:
                    filter: { kind: [theater, theatre, performing-arts] }
                    draw:   { icons: { sprite: performing-arts } }
                pet-store:
                    filter: { kind: [pet, pet-store, pet-service, pet_store] }
                    draw:   { icons: { sprite: pet-store } }
                pharmacy:
                    filter: { kind: [pharmacy, chemist] }
                    draw:   { icons: { sprite: pharmacy } }
                photography-lab:
                    filter: { kind: [photo_studio, photography_lab, photographer] }
                    draw:   { icons: { sprite: photography-lab } }
                picnic-spot:
                    filter: { kind: [picnic_site, picnic_spot, picnic-spot] }
                    draw:   { icons: { sprite: picnic-spot } }
                pool:
                    filter: { kind: [pool, swimming_pool, water_park] }
                    draw:   { icons: { sprite: pool } }
                pool-hall:
                    filter: { kind: [billiards, pool-hall] }
                    draw:   { icons: { sprite: pool-hall } }
                post-office:
                    filter: { kind: [post_office, post-office] }
                    draw:   { icons: { sprite: post-office } }
                power-pylon:
                    filter: { kind: [tower, power-pylon, pylon] }
                    draw:   { icons: { sprite: power-pylon } }
                real-estate:
                    filter: { kind: [estate_agent, real_estate] }
                    draw:   { icons: { sprite: real-estate } }
                recycling-facility:
                    filter: { kind: [recycling, recycling-facility] }
                    draw:   { icons: { sprite: recycling-facility } }
                rental-car:
                    filter: { kind: [rental-car, car_rental, car_sharing] }
                    draw:   { icons: { sprite: rental-car } }
                rest-area:
                    filter: { kind: [rest_area, rest-area] }
                    draw:   { icons: { sprite: rest-area } }
                restaurant:
                    filter: { kind: [restaurant, deli] }
                    draw:   { icons: { sprite: restaurant } }
                ruin:
                    filter: { kind: [ruins, archaeological_site] }
                    draw:   { icons: { sprite: ruin } }
                salon-barber:
                    filter: { kind: [hairdresser, salon-barber, salon, beauty_salon] }
                    draw:   { icons: { sprite: salon-barber } }
                ship-wreck:
                    filter: { kind: [wreck] }
                    draw:   { icons: { sprite: ship-wreck } }
                shoe-store:
                    filter: { kind: [shoes, shoe-store, shoe_store] }
                    draw:   { icons: { sprite: shoe-store } }
                smoke-shop:
                    filter: { kind: [smoke_shop, tobacco] }
                    draw:   { icons: { sprite: smoke-shop } }
                spa-massage:
                    filter: { kind: [spa, spa-massage, sauna, massage] }
                    draw:   { icons: { sprite: spa-massage } }
                spiritual-center:
                    filter: { kind: [spiritual_center, spiritual-center, place_of_worship, wayside_chapel] }
                    draw:   { icons: { sprite: spiritual-center } }
                church:
                    filter: { kind: place_of_worship, religion: christian }
                    draw:   { icons: { sprite: church } }
                synagogue:
                    filter: { kind: place_of_worship, religion: jewish }
                    draw:   { icons: { sprite: synagogue } }
                buddhist:
                    filter: { kind: place_of_worship, religion: buddhist }
                    draw:   { icons: { sprite: buddhism } }
                mosque:
                    filter: { kind: place_of_worship, religion: muslim }
                    draw:   { icons: { sprite: mosque } }
                sporting-goods-shop:
                    filter: { kind: [sporting_goods, sporting-goods-shop, sports, outdoor] }
                    draw:   { icons: { sprite: sporting-goods-shop } }
                stable:
                    filter: { kind: [stable, horse_riding] }
                    draw:   { icons: { sprite: stable } }
                storage-facility:
                    filter: { kind: [storage, storage-facility] }
                    draw:   { icons: { sprite: storage-facility } }
                subway-entrance:
                    filter: { kind: [subway_entrance] }
                    draw:   { icons: { sprite: subway-entrance } }
                tailor-shop:
                    filter: { kind: [tailor, tailor-shop] }
                    draw:   { icons: { sprite: tailor-shop } }
                tattoo-parlor:
                    filter: { kind: [tattoo, tattoo_parlor, tattoo-parlor] }
                    draw:   { icons: { sprite: tattoo-parlor } }
                theme-park:
                    filter: { kind: [theme_park, theme-park, miniature_golf] }
                    draw:   { icons: { sprite: theme-park } }
                thrift-vintage-store:
                    filter: { kind: [thrift, thrift-vintage-store, second_hand] }
                    draw:   { icons: { sprite: thrift-vintage-store } }
                toll-booth:
                    filter: { kind: [toll_booth, checkpoint, border_control] }
                    draw:   { icons: { sprite: toll-booth } }
                toy-game-store:
                    filter: { kind: [toys, toy-game-store, baby_goods] }
                    draw:   { icons: { sprite: toy-game-store } }
                toilets:
                    filter: { kind: [toilets] }
                    draw:   { icons: { sprite: toilets } }
                veterinarian:
                    filter: { kind: [pet_care, veterinarian, veterinary] }
                    draw:   { icons: { sprite: veterinarian } }
                video-game-store:
                    filter: { kind: [video_games] }
                    draw:   { icons: { sprite: video-game-store } }
                video-store:
                    filter: { kind: [video, video_store] }
                    draw:   { icons: { sprite: video-store } }
                view-point:
                    filter: { kind: [viewpoint, view_point, view-point, vista] }
                    draw:   { icons: { sprite: view-point } }
                well:
                    filter: { kind: [well, water_well] }
                    draw:   { icons: { sprite: well } }
                wine-shop:
                    filter: { kind: [wine, wine-shop] }
                    draw:   { icons: { sprite: wine-shop } }
                winery:
                    filter: { kind: [winery, wine] }
                    draw:   { icons: { sprite: winery } }
                winter_sport:
                    filter: { kind: [ski, ski_rental, ski_school, ski_jumping, skiing] }
                    draw:   { icons: { sprite: ski-area } }

    # todo: ocean and sea features are hiding in the places layer
    water-area-labels:
        data: { source: osm, layer: [water] }
        visible: *text_visible_water_labels
        filter:
            all:
                - name: true
                - $geometry: point
                - not: { kind: [riverbank, dock, playa] }
                - area: true
            any:
                # show labels for smaller landuse areas at higher zooms
                - { $zoom: { min: 5 },  area: { min: 10000000000 } }
                - { $zoom: { min: 6 },  area: { min: 5000000000 } }
                - { $zoom: { min: 7 },  area: { min: 400000000 } }
                - { $zoom: { min: 8 },  area: { min: 200000000 } }
                - { $zoom: { min: 9 },  area: { min: 100000000 } }
                - { $zoom: { min: 10 }, area: { min: 100000000 } }
                - { $zoom: { min: 11 }, area: { min: 10000000 } }
                - { $zoom: { min: 12 }, area: { min: 2000000 } }
                - { $zoom: { min: 13 }, area: { min: 1000000 } }
                - { $zoom: { min: 14 }, area: { min: 500000 } }
                - { $zoom: { min: 15 }, area: { min: 100000 } }
                - { $zoom: { min: 15 }, area: { min: 50000 } }
                - { $zoom: { min: 16 }, area: { min: 20000 } }
                - { $zoom: { min: 17 } }
        default-label-text:
            draw:
                text-blend-order:
                    font:
                        fill: [0.314,0.591,0.640] #*text_fill_water
                        family: *text_font_family
                        style: italic
                        weight: 400
                        size: 12px
                        # stroke: { color: [0.878,0.929,0.980], width: 2 }
        lakes-z5:
            filter: { $zoom: [5] }
            draw:
                text-blend-order: { font: { size: 9px } }
        lakes-z6:
            filter: { $zoom: [6] }
            draw:
                text-blend-order: { font: { size: 11px } }
        lakes-z8:
            filter: { $zoom: [8] }
            draw:
                text-blend-order: { font: { size: 12px } }

    ocean-sea-labels:
        data: { source: osm, layer: places }
        visible: *text_visible_water_labels
        filter: { name: true, kind: [sea, ocean] }
        draw:
            text-blend-order:
                font:
                    fill: [0.314,0.591,0.640] #*text_fill_water
                    family: *text_font_family
                    weight: 400
                    size: 12px
                    transform: uppercase
        sea-early:
            filter: { $zoom: [3], kind: sea }
            draw: { text-blend-order: { visible: false } }
        ocean-spacer:
            filter: { kind: ocean }
            ocean-spacer-z1-z4:
                filter: { $zoom: { min: 1, max: 4 } }
                draw:
                    text-blend-order:
                        text_source: function() { return feature.name.split('').join(' ') }
                        text_wrap: false
            ocean-spacer-z4-up:
                filter: { $zoom: { min: 4 } }
                draw:
                    text-blend-order:
                        text_source: function() { return feature.name.split('').join('  ') }
                        text_wrap: false
        ocean-labels-z1:
            filter: { $zoom: [1] }
            draw:
                text-blend-order: { font: { size: 8px } }
        ocean-labels-z2:
            filter: { $zoom: [2] }
            draw:
                text-blend-order: { font: { size: 10px } }
        ocean-labels-z3:
            filter: { $zoom: [3] }
            draw:
                text-blend-order: { font: { size: 13px } }
        ocean-labels-z4-up:
            filter: { $zoom: { min: 4} }
            draw:
                text-blend-order: { font: { size: 16px } }

        sea-spacer:
            filter: { not: { kind: [ocean] }, $zoom: { min: 5 } }
            draw:
                text-blend-order:
                    text_source: function() { return feature.name.split('').join(' ') }
                    text_wrap: false

        sea-labels:
            filter: { not: { kind: [ocean] } }
            sea-labels-z4:
                    filter: { $zoom: [4] }
                    draw:
                        text-blend-order: { font: { size: 9px } }
            sea-labels-z5:
                    filter: { $zoom: [5] }
                    draw:
                        text-blend-order: { font: { size: 10px } }
            sea-labels-z6:
                    filter: { $zoom: [6] }
                    draw:
                        text-blend-order: { font: { size: 11px } }
            sea-labels-z7:
                    filter: { $zoom: [7] }
                    draw:
                        text-blend-order: { font: { size: 12px } }
            sea-labels-z8:
                    filter: { $zoom: { min: 8} }
                    draw:
                        text-blend-order: { font: { size: 14px } }

    playa-labels:
        data: { source: osm, layer: [water] }
        visible: *text_visible_water_labels
        filter:
            all:
                - name: true
                - $geometry: point
                - kind: playa
                - area: true
            any:
                # show labels for smaller landuse areas at higher zooms
                - { $zoom: { min: 7 },  area: { min: 1500000000 } }
                - { $zoom: { min: 8 },  area: { min: 200000000 } }
                - { $zoom: { min: 9 },  area: { min: 100000000 } }
                - { $zoom: { min: 10 }, area: { min: 100000000 } }
                - { $zoom: { min: 11 }, area: { min: 10000000 } }
                - { $zoom: { min: 12 }, area: { min: 2000000 } }
                - { $zoom: { min: 13 }, area: { min: 1000000 } }
                - { $zoom: { min: 14 }, area: { min: 500000 } }
                - { $zoom: { min: 15 }, area: { min: 100000 } }
                - { $zoom: { min: 15 }, area: { min: 50000 } }
                - { $zoom: { min: 16 }, area: { min: 20000 } }
                - { $zoom: { min: 17 } }
        draw:
            text-blend-order:
                font:
                    fill: grey
                    family: *text_font_family
                    style: italic
                    weight: 400
                    size: 12px
                    stroke: { color: *text_stroke_water, width: 3 }
        # debug only
#        icons:
#            size: [[13, 12px], [15, 18px]]
#            interactive: true
#            sprite: *townspot_sprite
    water-line-labels:
        data: { source: osm, layer: [water] }
        filter:
            all:
                - name: true
                - $geometry: line
                - kind: [river,canal,stream,dam,ditch,drain]
                - $zoom: { min: 14 }
        draw:
            text-blend-order:
                font:
                    fill: [0.314,0.591,0.640]
                    family: *text_font_family
                    style: italic
                    weight: 400
                    size: 12px
        water-line-labels-z14:
            filter: { $zoom: [14] }
            draw:
                text-blend-order: { font: { size: 10px } }
        water-line-labels-z17:
            filter: { $zoom: [17] }
            draw:
                text-blend-order: { font: { size: 14px } }
        not-river-not-stream:
            filter: { kind: [canal,dam,ditch,drain], $zoom: { max: 16 } }
            draw:
                text-blend-order:
                    visible: false
        stream:
            filter: { kind: [stream], $zoom: { max: 17 } }
            draw:
                text-blend-order:
                    visible: false

    debug:
        data: { source: osm }
        draw:
            flat_lines:
                width: 2px
                order: 1000
                color: '#ff0000'
